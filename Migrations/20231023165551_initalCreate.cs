using System;
using Microsoft.EntityFrameworkCore.Migrations;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace PokeDokeMartRedux.Migrations
{
    public partial class initalCreate : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.CreateTable(
                name: "AspNetRoles",
                columns: table => new
                {
                    Id = table.Column<string>(type: "text", nullable: false),
                    Name = table.Column<string>(type: "character varying(256)", maxLength: 256, nullable: true),
                    NormalizedName = table.Column<string>(type: "character varying(256)", maxLength: 256, nullable: true),
                    ConcurrencyStamp = table.Column<string>(type: "text", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_AspNetRoles", x => x.Id);
                });

            migrationBuilder.CreateTable(
                name: "AspNetUsers",
                columns: table => new
                {
                    Id = table.Column<string>(type: "text", nullable: false),
                    UserName = table.Column<string>(type: "character varying(256)", maxLength: 256, nullable: true),
                    NormalizedUserName = table.Column<string>(type: "character varying(256)", maxLength: 256, nullable: true),
                    Email = table.Column<string>(type: "character varying(256)", maxLength: 256, nullable: true),
                    NormalizedEmail = table.Column<string>(type: "character varying(256)", maxLength: 256, nullable: true),
                    EmailConfirmed = table.Column<bool>(type: "boolean", nullable: false),
                    PasswordHash = table.Column<string>(type: "text", nullable: true),
                    SecurityStamp = table.Column<string>(type: "text", nullable: true),
                    ConcurrencyStamp = table.Column<string>(type: "text", nullable: true),
                    PhoneNumber = table.Column<string>(type: "text", nullable: true),
                    PhoneNumberConfirmed = table.Column<bool>(type: "boolean", nullable: false),
                    TwoFactorEnabled = table.Column<bool>(type: "boolean", nullable: false),
                    LockoutEnd = table.Column<DateTimeOffset>(type: "timestamp with time zone", nullable: true),
                    LockoutEnabled = table.Column<bool>(type: "boolean", nullable: false),
                    AccessFailedCount = table.Column<int>(type: "integer", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_AspNetUsers", x => x.Id);
                });

            migrationBuilder.CreateTable(
                name: "Categories",
                columns: table => new
                {
                    Id = table.Column<int>(type: "integer", nullable: false)
                        .Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn),
                    Name = table.Column<string>(type: "text", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Categories", x => x.Id);
                });

            migrationBuilder.CreateTable(
                name: "DamageClasses",
                columns: table => new
                {
                    Id = table.Column<int>(type: "integer", nullable: false)
                        .Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn),
                    Name = table.Column<string>(type: "text", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_DamageClasses", x => x.Id);
                });

            migrationBuilder.CreateTable(
                name: "Pokemon",
                columns: table => new
                {
                    Id = table.Column<int>(type: "integer", nullable: false)
                        .Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn),
                    Name = table.Column<string>(type: "text", nullable: true),
                    Image = table.Column<string>(type: "text", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Pokemon", x => x.Id);
                });

            migrationBuilder.CreateTable(
                name: "PokeTypes",
                columns: table => new
                {
                    Id = table.Column<int>(type: "integer", nullable: false)
                        .Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn),
                    Name = table.Column<string>(type: "text", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PokeTypes", x => x.Id);
                });

            migrationBuilder.CreateTable(
                name: "Regions",
                columns: table => new
                {
                    Id = table.Column<int>(type: "integer", nullable: false)
                        .Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn),
                    Name = table.Column<string>(type: "text", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Regions", x => x.Id);
                });

            migrationBuilder.CreateTable(
                name: "AspNetRoleClaims",
                columns: table => new
                {
                    Id = table.Column<int>(type: "integer", nullable: false)
                        .Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn),
                    RoleId = table.Column<string>(type: "text", nullable: false),
                    ClaimType = table.Column<string>(type: "text", nullable: true),
                    ClaimValue = table.Column<string>(type: "text", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_AspNetRoleClaims", x => x.Id);
                    table.ForeignKey(
                        name: "FK_AspNetRoleClaims_AspNetRoles_RoleId",
                        column: x => x.RoleId,
                        principalTable: "AspNetRoles",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "AspNetUserClaims",
                columns: table => new
                {
                    Id = table.Column<int>(type: "integer", nullable: false)
                        .Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn),
                    UserId = table.Column<string>(type: "text", nullable: false),
                    ClaimType = table.Column<string>(type: "text", nullable: true),
                    ClaimValue = table.Column<string>(type: "text", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_AspNetUserClaims", x => x.Id);
                    table.ForeignKey(
                        name: "FK_AspNetUserClaims_AspNetUsers_UserId",
                        column: x => x.UserId,
                        principalTable: "AspNetUsers",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "AspNetUserLogins",
                columns: table => new
                {
                    LoginProvider = table.Column<string>(type: "text", nullable: false),
                    ProviderKey = table.Column<string>(type: "text", nullable: false),
                    ProviderDisplayName = table.Column<string>(type: "text", nullable: true),
                    UserId = table.Column<string>(type: "text", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_AspNetUserLogins", x => new { x.LoginProvider, x.ProviderKey });
                    table.ForeignKey(
                        name: "FK_AspNetUserLogins_AspNetUsers_UserId",
                        column: x => x.UserId,
                        principalTable: "AspNetUsers",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "AspNetUserRoles",
                columns: table => new
                {
                    UserId = table.Column<string>(type: "text", nullable: false),
                    RoleId = table.Column<string>(type: "text", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_AspNetUserRoles", x => new { x.UserId, x.RoleId });
                    table.ForeignKey(
                        name: "FK_AspNetUserRoles_AspNetRoles_RoleId",
                        column: x => x.RoleId,
                        principalTable: "AspNetRoles",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "FK_AspNetUserRoles_AspNetUsers_UserId",
                        column: x => x.UserId,
                        principalTable: "AspNetUsers",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "AspNetUserTokens",
                columns: table => new
                {
                    UserId = table.Column<string>(type: "text", nullable: false),
                    LoginProvider = table.Column<string>(type: "text", nullable: false),
                    Name = table.Column<string>(type: "text", nullable: false),
                    Value = table.Column<string>(type: "text", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_AspNetUserTokens", x => new { x.UserId, x.LoginProvider, x.Name });
                    table.ForeignKey(
                        name: "FK_AspNetUserTokens_AspNetUsers_UserId",
                        column: x => x.UserId,
                        principalTable: "AspNetUsers",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "Moves",
                columns: table => new
                {
                    Id = table.Column<int>(type: "integer", nullable: false)
                        .Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn),
                    Name = table.Column<string>(type: "text", nullable: true),
                    Accuracy = table.Column<int>(type: "integer", nullable: true),
                    Power = table.Column<int>(type: "integer", nullable: true),
                    PP = table.Column<int>(type: "integer", nullable: true),
                    DamageClassId = table.Column<int>(type: "integer", nullable: false),
                    PokeTypeId = table.Column<int>(type: "integer", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Moves", x => x.Id);
                    table.ForeignKey(
                        name: "FK_Moves_DamageClasses_DamageClassId",
                        column: x => x.DamageClassId,
                        principalTable: "DamageClasses",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "FK_Moves_PokeTypes_PokeTypeId",
                        column: x => x.PokeTypeId,
                        principalTable: "PokeTypes",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "PokemonTypes",
                columns: table => new
                {
                    Id = table.Column<int>(type: "integer", nullable: false)
                        .Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn),
                    PokemonId = table.Column<int>(type: "integer", nullable: false),
                    PokeTypeId = table.Column<int>(type: "integer", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PokemonTypes", x => x.Id);
                    table.ForeignKey(
                        name: "FK_PokemonTypes_Pokemon_PokemonId",
                        column: x => x.PokemonId,
                        principalTable: "Pokemon",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "FK_PokemonTypes_PokeTypes_PokeTypeId",
                        column: x => x.PokeTypeId,
                        principalTable: "PokeTypes",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "Cities",
                columns: table => new
                {
                    Id = table.Column<int>(type: "integer", nullable: false)
                        .Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn),
                    Name = table.Column<string>(type: "text", nullable: true),
                    RegionId = table.Column<int>(type: "integer", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Cities", x => x.Id);
                    table.ForeignKey(
                        name: "FK_Cities_Regions_RegionId",
                        column: x => x.RegionId,
                        principalTable: "Regions",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "Items",
                columns: table => new
                {
                    Id = table.Column<int>(type: "integer", nullable: false)
                        .Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn),
                    Name = table.Column<string>(type: "text", nullable: true),
                    Cost = table.Column<decimal>(type: "numeric", nullable: false),
                    Effect = table.Column<string>(type: "text", nullable: true),
                    ShortEffect = table.Column<string>(type: "text", nullable: true),
                    Description = table.Column<string>(type: "text", nullable: true),
                    MoveId = table.Column<int>(type: "integer", nullable: true),
                    CategoryId = table.Column<int>(type: "integer", nullable: false),
                    Image = table.Column<string>(type: "text", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Items", x => x.Id);
                    table.ForeignKey(
                        name: "FK_Items_Categories_CategoryId",
                        column: x => x.CategoryId,
                        principalTable: "Categories",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "FK_Items_Moves_MoveId",
                        column: x => x.MoveId,
                        principalTable: "Moves",
                        principalColumn: "Id");
                });

            migrationBuilder.CreateTable(
                name: "PokemonLearnableMoves",
                columns: table => new
                {
                    Id = table.Column<int>(type: "integer", nullable: false)
                        .Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn),
                    PokemonId = table.Column<int>(type: "integer", nullable: false),
                    MoveId = table.Column<int>(type: "integer", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_PokemonLearnableMoves", x => x.Id);
                    table.ForeignKey(
                        name: "FK_PokemonLearnableMoves_Moves_MoveId",
                        column: x => x.MoveId,
                        principalTable: "Moves",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "FK_PokemonLearnableMoves_Pokemon_PokemonId",
                        column: x => x.PokemonId,
                        principalTable: "Pokemon",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "UserProfiles",
                columns: table => new
                {
                    Id = table.Column<int>(type: "integer", nullable: false)
                        .Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn),
                    FirstName = table.Column<string>(type: "text", nullable: true),
                    LastName = table.Column<string>(type: "text", nullable: true),
                    Address = table.Column<string>(type: "text", nullable: true),
                    RegionId = table.Column<int>(type: "integer", nullable: false),
                    CityId = table.Column<int>(type: "integer", nullable: false),
                    ProfilePictureUrl = table.Column<string>(type: "text", nullable: true),
                    IdentityUserId = table.Column<string>(type: "text", nullable: true)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_UserProfiles", x => x.Id);
                    table.ForeignKey(
                        name: "FK_UserProfiles_AspNetUsers_IdentityUserId",
                        column: x => x.IdentityUserId,
                        principalTable: "AspNetUsers",
                        principalColumn: "Id");
                    table.ForeignKey(
                        name: "FK_UserProfiles_Cities_CityId",
                        column: x => x.CityId,
                        principalTable: "Cities",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "FK_UserProfiles_Regions_RegionId",
                        column: x => x.RegionId,
                        principalTable: "Regions",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "Orders",
                columns: table => new
                {
                    Id = table.Column<int>(type: "integer", nullable: false)
                        .Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn),
                    UserProfileId = table.Column<int>(type: "integer", nullable: false),
                    Date = table.Column<DateTime>(type: "timestamp without time zone", nullable: false),
                    FirstName = table.Column<string>(type: "text", nullable: true),
                    MiddleInitial = table.Column<string>(type: "text", nullable: true),
                    LastName = table.Column<string>(type: "text", nullable: true),
                    Address = table.Column<string>(type: "text", nullable: true),
                    CityId = table.Column<int>(type: "integer", nullable: false),
                    RegionId = table.Column<int>(type: "integer", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Orders", x => x.Id);
                    table.ForeignKey(
                        name: "FK_Orders_Cities_CityId",
                        column: x => x.CityId,
                        principalTable: "Cities",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "FK_Orders_Regions_RegionId",
                        column: x => x.RegionId,
                        principalTable: "Regions",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "FK_Orders_UserProfiles_UserProfileId",
                        column: x => x.UserProfileId,
                        principalTable: "UserProfiles",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "Reviews",
                columns: table => new
                {
                    Id = table.Column<int>(type: "integer", nullable: false)
                        .Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn),
                    UserProfileId = table.Column<int>(type: "integer", nullable: false),
                    ItemId = table.Column<int>(type: "integer", nullable: false),
                    Rating = table.Column<int>(type: "integer", nullable: false),
                    Body = table.Column<string>(type: "text", nullable: true),
                    Date = table.Column<DateTime>(type: "timestamp without time zone", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_Reviews", x => x.Id);
                    table.ForeignKey(
                        name: "FK_Reviews_Items_ItemId",
                        column: x => x.ItemId,
                        principalTable: "Items",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "FK_Reviews_UserProfiles_UserProfileId",
                        column: x => x.UserProfileId,
                        principalTable: "UserProfiles",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "UserPokemon",
                columns: table => new
                {
                    Id = table.Column<int>(type: "integer", nullable: false)
                        .Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn),
                    NickName = table.Column<string>(type: "text", nullable: true),
                    PokemonId = table.Column<int>(type: "integer", nullable: false),
                    UserProfileId = table.Column<int>(type: "integer", nullable: false),
                    Level = table.Column<int>(type: "integer", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_UserPokemon", x => x.Id);
                    table.ForeignKey(
                        name: "FK_UserPokemon_Pokemon_PokemonId",
                        column: x => x.PokemonId,
                        principalTable: "Pokemon",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "FK_UserPokemon_UserProfiles_UserProfileId",
                        column: x => x.UserProfileId,
                        principalTable: "UserProfiles",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.CreateTable(
                name: "OrderItems",
                columns: table => new
                {
                    Id = table.Column<int>(type: "integer", nullable: false)
                        .Annotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn),
                    OrderId = table.Column<int>(type: "integer", nullable: false),
                    ItemId = table.Column<int>(type: "integer", nullable: false),
                    Quantity = table.Column<int>(type: "integer", nullable: false)
                },
                constraints: table =>
                {
                    table.PrimaryKey("PK_OrderItems", x => x.Id);
                    table.ForeignKey(
                        name: "FK_OrderItems_Items_ItemId",
                        column: x => x.ItemId,
                        principalTable: "Items",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                    table.ForeignKey(
                        name: "FK_OrderItems_Orders_OrderId",
                        column: x => x.OrderId,
                        principalTable: "Orders",
                        principalColumn: "Id",
                        onDelete: ReferentialAction.Cascade);
                });

            migrationBuilder.InsertData(
                table: "AspNetRoles",
                columns: new[] { "Id", "ConcurrencyStamp", "Name", "NormalizedName" },
                values: new object[] { "c3aaeb97-d2ba-4a53-a521-4eea61e59b35", null, "Admin", "admin" });

            migrationBuilder.InsertData(
                table: "AspNetUsers",
                columns: new[] { "Id", "AccessFailedCount", "ConcurrencyStamp", "Email", "EmailConfirmed", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName" },
                values: new object[] { "dbc40bc6-0829-4ac5-a3ed-180f5e916a5f", 0, "9f29fbdb-abba-495f-8a45-f17d303378e3", "admina@strator.comx", false, false, null, null, null, "AQAAAAIAAYagAAAAEDQt4MvpNAwMib7yc1BjCPU60pff87cYge/ZgQn51ZedXOxBKzGnXlx94ubdzULuOw==", null, false, "e2ed2f3f-f3ea-4fda-b44c-b79c43c7e2d7", false, "Administrator" });

            migrationBuilder.InsertData(
                table: "Categories",
                columns: new[] { "Id", "Name" },
                values: new object[,]
                {
                    { 1, "Standard Poke Balls" },
                    { 2, "Special Poke Balls" },
                    { 3, "Healing Items" },
                    { 4, "Status Cure Items" },
                    { 5, "Revial Items" },
                    { 6, "PP-Recovery Items" },
                    { 7, "Vitamins" },
                    { 8, "Stat-Boost Items" },
                    { 9, "Evolution Items" },
                    { 10, "Adventuring Items" },
                    { 11, "TMs" },
                    { 12, "Berries" }
                });

            migrationBuilder.InsertData(
                table: "DamageClasses",
                columns: new[] { "Id", "Name" },
                values: new object[,]
                {
                    { 1, "Status" },
                    { 2, "Physical" },
                    { 3, "Special" }
                });

            migrationBuilder.InsertData(
                table: "PokeTypes",
                columns: new[] { "Id", "Name" },
                values: new object[,]
                {
                    { 1, "Normal" },
                    { 2, "Fighting" },
                    { 3, "Flying" },
                    { 4, "Poison" },
                    { 5, "Ground" },
                    { 6, "Rock" },
                    { 7, "Bug" },
                    { 8, "Ghost" },
                    { 9, "Steel" },
                    { 10, "Fire" },
                    { 11, "Water" },
                    { 12, "Grass" },
                    { 13, "Electric" },
                    { 14, "Psychic" },
                    { 15, "Ice" },
                    { 16, "Dragon" },
                    { 17, "Dark" },
                    { 18, "Fairy" },
                    { 19, "Unknown" },
                    { 20, "Shadow" }
                });

            migrationBuilder.InsertData(
                table: "Pokemon",
                columns: new[] { "Id", "Image", "Name" },
                values: new object[,]
                {
                    { 1, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/1.png", "Bulbasaur" },
                    { 2, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/2.png", "Ivysaur" },
                    { 3, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/3.png", "Venusaur" },
                    { 4, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/4.png", "Charmander" },
                    { 5, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/5.png", "Charmeleon" },
                    { 6, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/6.png", "Charizard" },
                    { 7, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/7.png", "Squirtle" },
                    { 8, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/8.png", "Wartortle" },
                    { 9, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/9.png", "Blastoise" },
                    { 10, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/10.png", "Caterpie" },
                    { 11, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/11.png", "Metapod" },
                    { 12, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/12.png", "Butterfree" },
                    { 13, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/13.png", "Weedle" },
                    { 14, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/14.png", "Kakuna" },
                    { 15, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/15.png", "Beedrill" },
                    { 16, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/16.png", "Pidgey" },
                    { 17, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/17.png", "Pidgeotto" },
                    { 18, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/18.png", "Pidgeot" },
                    { 19, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/19.png", "Rattata" },
                    { 20, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/20.png", "Raticate" },
                    { 21, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/21.png", "Spearow" },
                    { 22, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/22.png", "Fearow" },
                    { 23, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/23.png", "Ekans" },
                    { 24, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/24.png", "Arbok" },
                    { 25, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/25.png", "Pikachu" },
                    { 26, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/26.png", "Raichu" },
                    { 27, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/27.png", "Sandshrew" },
                    { 28, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/28.png", "Sandslash" },
                    { 29, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/29.png", "Nidoran-f" },
                    { 30, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/30.png", "Nidorina" },
                    { 31, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/31.png", "Nidoqueen" },
                    { 32, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/32.png", "Nidoran-m" },
                    { 33, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/33.png", "Nidorino" },
                    { 34, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/34.png", "Nidoking" },
                    { 35, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/35.png", "Clefairy" },
                    { 36, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/36.png", "Clefable" },
                    { 37, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/37.png", "Vulpix" },
                    { 38, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/38.png", "Ninetales" },
                    { 39, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/39.png", "Jigglypuff" },
                    { 40, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/40.png", "Wigglytuff" },
                    { 41, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/41.png", "Zubat" },
                    { 42, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/42.png", "Golbat" },
                    { 43, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/43.png", "Oddish" },
                    { 44, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/44.png", "Gloom" },
                    { 45, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/45.png", "Vileplume" },
                    { 46, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/46.png", "Paras" },
                    { 47, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/47.png", "Parasect" },
                    { 48, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/48.png", "Venonat" },
                    { 49, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/49.png", "Venomoth" },
                    { 50, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/50.png", "Diglett" },
                    { 51, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/51.png", "Dugtrio" },
                    { 52, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/52.png", "Meowth" },
                    { 53, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/53.png", "Persian" },
                    { 54, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/54.png", "Psyduck" },
                    { 55, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/55.png", "Golduck" },
                    { 56, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/56.png", "Mankey" },
                    { 57, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/57.png", "Primeape" },
                    { 58, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/58.png", "Growlithe" },
                    { 59, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/59.png", "Arcanine" },
                    { 60, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/60.png", "Poliwag" },
                    { 61, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/61.png", "Poliwhirl" },
                    { 62, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/62.png", "Poliwrath" },
                    { 63, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/63.png", "Abra" },
                    { 64, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/64.png", "Kadabra" },
                    { 65, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/65.png", "Alakazam" },
                    { 66, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/66.png", "Machop" },
                    { 67, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/67.png", "Machoke" },
                    { 68, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/68.png", "Machamp" },
                    { 69, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/69.png", "Bellsprout" },
                    { 70, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/70.png", "Weepinbell" },
                    { 71, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/71.png", "Victreebel" },
                    { 72, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/72.png", "Tentacool" },
                    { 73, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/73.png", "Tentacruel" },
                    { 74, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/74.png", "Geodude" },
                    { 75, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/75.png", "Graveler" },
                    { 76, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/76.png", "Golem" },
                    { 77, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/77.png", "Ponyta" },
                    { 78, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/78.png", "Rapidash" },
                    { 79, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/79.png", "Slowpoke" },
                    { 80, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/80.png", "Slowbro" },
                    { 81, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/81.png", "Magnemite" },
                    { 82, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/82.png", "Magneton" },
                    { 83, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/83.png", "Farfetch'd" },
                    { 84, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/84.png", "Doduo" },
                    { 85, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/85.png", "Dodrio" },
                    { 86, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/86.png", "Seel" },
                    { 87, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/87.png", "Dewgong" },
                    { 88, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/88.png", "Grimer" },
                    { 89, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/89.png", "Muk" },
                    { 90, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/90.png", "Shellder" },
                    { 91, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/91.png", "Cloyster" },
                    { 92, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/92.png", "Gastly" },
                    { 93, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/93.png", "Haunter" },
                    { 94, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/94.png", "Gengar" },
                    { 95, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/95.png", "Onix" },
                    { 96, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/96.png", "Drowzee" },
                    { 97, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/97.png", "Hypno" },
                    { 98, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/98.png", "Krabby" },
                    { 99, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/99.png", "Kingler" },
                    { 100, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/100.png", "Voltorb" },
                    { 101, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/101.png", "Electrode" },
                    { 102, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/102.png", "Exeggcute" },
                    { 103, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/103.png", "Exeggutor" },
                    { 104, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/104.png", "Cubone" },
                    { 105, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/105.png", "Marowak" },
                    { 106, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/106.png", "Hitmonlee" },
                    { 107, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/107.png", "Hitmonchan" },
                    { 108, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/108.png", "Lickitung" },
                    { 109, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/109.png", "Koffing" },
                    { 110, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/110.png", "Weezing" },
                    { 111, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/111.png", "Rhyhorn" },
                    { 112, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/112.png", "Rhydon" },
                    { 113, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/113.png", "Chansey" },
                    { 114, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/114.png", "Tangela" },
                    { 115, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/115.png", "Kangaskhan" },
                    { 116, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/116.png", "Horsea" },
                    { 117, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/117.png", "Seadra" },
                    { 118, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/118.png", "Goldeen" },
                    { 119, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/119.png", "Seaking" },
                    { 120, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/120.png", "Staryu" },
                    { 121, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/121.png", "Starmie" },
                    { 122, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/122.png", "Mr. Mime" },
                    { 123, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/123.png", "Scyther" },
                    { 124, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/124.png", "Jynx" },
                    { 125, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/125.png", "Electabuzz" },
                    { 126, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/126.png", "Magmar" },
                    { 127, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/127.png", "Pinsir" },
                    { 128, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/128.png", "Tauros" },
                    { 129, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/129.png", "Magikarp" },
                    { 130, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/130.png", "Gyarados" },
                    { 131, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/131.png", "Lapras" },
                    { 132, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/132.png", "Ditto" },
                    { 133, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/133.png", "Eevee" },
                    { 134, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/134.png", "Vaporeon" },
                    { 135, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/135.png", "Jolteon" },
                    { 136, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/136.png", "Flareon" },
                    { 137, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/137.png", "Porygon" },
                    { 138, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/138.png", "Omanyte" },
                    { 139, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/139.png", "Omastar" },
                    { 140, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/140.png", "Kabuto" },
                    { 141, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/141.png", "Kabutops" },
                    { 142, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/142.png", "Aerodactyl" },
                    { 143, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/143.png", "Snorlax" },
                    { 144, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/144.png", "Articuno" },
                    { 145, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/145.png", "Zapdos" },
                    { 146, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/146.png", "Moltres" },
                    { 147, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/147.png", "Dratini" },
                    { 148, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/148.png", "Dragonair" },
                    { 149, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/149.png", "Dragonite" },
                    { 150, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/150.png", "Mewtwo" },
                    { 151, "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/151.png", "Mew" }
                });

            migrationBuilder.InsertData(
                table: "Regions",
                columns: new[] { "Id", "Name" },
                values: new object[,]
                {
                    { 1, "Kanto" },
                    { 2, "Johto" },
                    { 3, "Hoenn" },
                    { 4, "Sinnoh" },
                    { 5, "Unova" },
                    { 6, "Kalos" },
                    { 7, "Alola" },
                    { 8, "Galar" },
                    { 9, "Paldea" },
                    { 10, "Hisui" }
                });

            migrationBuilder.InsertData(
                table: "AspNetUserRoles",
                columns: new[] { "RoleId", "UserId" },
                values: new object[] { "c3aaeb97-d2ba-4a53-a521-4eea61e59b35", "dbc40bc6-0829-4ac5-a3ed-180f5e916a5f" });

            migrationBuilder.InsertData(
                table: "Cities",
                columns: new[] { "Id", "Name", "RegionId" },
                values: new object[,]
                {
                    { 1, "Accumula Town", 5 },
                    { 2, "Alfornada", 9 },
                    { 3, "Ambrette Town", 6 },
                    { 4, "Anistar City", 6 },
                    { 5, "Anville Town", 5 },
                    { 6, "Aquacorde Town", 6 },
                    { 7, "Artazon", 9 },
                    { 8, "Aspertia City", 5 },
                    { 9, "Azalea Town", 2 },
                    { 10, "Ballonlea", 8 },
                    { 11, "Black City", 5 },
                    { 12, "Blackthorn City", 2 },
                    { 13, "Cabo Poco", 9 },
                    { 14, "Camphrier Town", 6 },
                    { 15, "Canalave City", 4 },
                    { 16, "Cascarrafa", 9 },
                    { 17, "Castelia City", 5 },
                    { 18, "Celadon City", 1 },
                    { 19, "Celestic Town", 4 },
                    { 20, "Cerulean City", 1 },
                    { 21, "Cherrygrove City", 2 },
                    { 22, "Cianwood City", 2 },
                    { 23, "Circhester", 8 },
                    { 24, "Cinnabar Island", 1 },
                    { 25, "Cortondo", 9 },
                    { 26, "Coumarine City", 6 },
                    { 27, "Couriway Town", 6 },
                    { 28, "Cyllage City", 6 },
                    { 29, "Dendemille Town", 6 },
                    { 30, "Dewford Town", 3 },
                    { 31, "Diamond Settlement", 10 },
                    { 32, "Driftveil City", 5 },
                    { 33, "Ecruteak City", 2 },
                    { 34, "Eterna City", 4 },
                    { 35, "Ever Grande City", 3 },
                    { 36, "Fallarbor Town", 3 },
                    { 37, "Fight Area", 4 },
                    { 38, "Five Island", 7 },
                    { 39, "Floaroma Town", 4 },
                    { 40, "Floccesy Town", 5 },
                    { 41, "Fortree City", 3 },
                    { 42, "Four Island", 7 },
                    { 43, "Freezington", 8 },
                    { 44, "Frontier Access", 2 },
                    { 45, "Fuchsia City", 1 },
                    { 46, "Geosenge Town", 6 },
                    { 47, "Goldenrod City", 2 },
                    { 48, "Hammerlocke", 8 },
                    { 49, "Hau'oli City", 7 },
                    { 50, "Heahea City", 7 },
                    { 51, "Hearthome City", 4 },
                    { 52, "Hulbury", 8 },
                    { 53, "Humilau City", 5 },
                    { 54, "Icirrus City", 5 },
                    { 55, "Iki Town", 7 },
                    { 56, "Jubilife City", 4 },
                    { 57, "Jubilife Village", 10 },
                    { 58, "Kiloude City", 6 },
                    { 59, "Konikoni City", 7 },
                    { 60, "Lacunosa Town", 5 },
                    { 61, "Lavaridge Town", 3 },
                    { 62, "Lavender Town", 1 },
                    { 63, "Laverre City", 6 },
                    { 64, "Lentimas Town", 5 },
                    { 65, "Levincia", 9 },
                    { 66, "Littleroot Town", 3 },
                    { 67, "Lilycove City", 3 },
                    { 68, "Los Platos", 9 },
                    { 69, "Lumiose City", 6 },
                    { 70, "Mahogany Town", 2 },
                    { 71, "Malie City", 7 },
                    { 72, "Mauville City", 3 },
                    { 73, "Medali", 9 },
                    { 74, "Mesagoza", 9 },
                    { 75, "Mistralton City", 5 },
                    { 76, "Montenevera", 9 },
                    { 77, "Mossdeep City", 3 },
                    { 78, "Motostoke", 8 },
                    { 79, "Nacrene City", 5 },
                    { 80, "New Bark Town", 2 },
                    { 81, "Nimbasa City", 5 },
                    { 82, "Nuvema Town", 5 },
                    { 83, "Oldale Town", 3 },
                    { 84, "Olivine City", 2 },
                    { 85, "One Island", 7 },
                    { 86, "Opelucid City", 5 },
                    { 87, "Oreburgh City", 4 },
                    { 88, "Pacifidlog Town", 3 },
                    { 89, "Pallet Town", 1 },
                    { 90, "Paniola Town", 7 },
                    { 91, "Pastoria City", 4 },
                    { 92, "Pearl Settlement", 10 },
                    { 93, "Pewter City", 1 },
                    { 94, "Phenac City", 7 },
                    { 95, "Pompona", 9 },
                    { 96, "Prairie", 9 },
                    { 97, "Profanity", 10 },
                    { 98, "Pueblo", 10 },
                    { 99, "Pueblo Soledad", 7 },
                    { 100, "Punta Brigal", 9 },
                    { 101, "Punto Isla", 9 },
                    { 102, "Punta Sonorama", 9 },
                    { 103, "Quicksand Castle", 10 },
                    { 104, "Raihon", 9 },
                    { 105, "Relic Town", 3 },
                    { 106, "Revive Town", 10 },
                    { 107, "Rustboro City", 3 },
                    { 108, "Santalune City", 6 },
                    { 109, "Saraltar", 9 },
                    { 110, "Seafoam Islands", 1 },
                    { 111, "Sootopolis City", 3 },
                    { 112, "Snowbelle City", 6 },
                    { 113, "Solaceon Town", 4 },
                    { 114, "Spearmint", 9 },
                    { 115, "Slateport City", 3 },
                    { 116, "Snowpoint City", 4 },
                    { 117, "Snowy City", 10 },
                    { 118, "Spikemuth", 8 },
                    { 119, "Spindle", 9 },
                    { 120, "Spikestown", 10 },
                    { 121, "Stark Mountain", 4 },
                    { 122, "Striaton City", 5 },
                    { 123, "Sunyshore City", 4 },
                    { 124, "Tarroco", 9 },
                    { 125, "Tempo Tiempo", 9 },
                    { 126, "Three Island", 7 },
                    { 127, "Twinleaf Town", 4 },
                    { 128, "Undella Town", 5 },
                    { 129, "Vaniville Town", 6 },
                    { 130, "Veilstone City", 4 },
                    { 131, "Verdanturf Town", 3 },
                    { 132, "Vermilion City", 1 },
                    { 133, "Violet City", 2 },
                    { 134, "Virbank City", 5 },
                    { 135, "Viridian City", 1 },
                    { 136, "Wedgehurst", 8 },
                    { 137, "White Forest", 5 },
                    { 138, "Wyndon", 8 },
                    { 139, "Zapapico", 9 }
                });

            migrationBuilder.InsertData(
                table: "Items",
                columns: new[] { "Id", "CategoryId", "Cost", "Description", "Effect", "Image", "MoveId", "Name", "ShortEffect" },
                values: new object[,]
                {
                    { 1, 1, 800m, "An ultra-high-performance Poké Ball that provides a higher success rate for catching Pokémon than a Great Ball.", "Used in battle: Attempts to catch a wild Pokémon, using a catch rate of 2×. If used in a trainer battle, nothing happens and the ball is lost.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/ultra-ball.png", null, "Ultra Ball", "Tries to catch a wild Pokémon. Success rate is 2×." },
                    { 2, 1, 600m, "A good, high-performance Poké Ball that provides a higher success rate for catching Pokémon than a standard Poké Ball.", "Used in battle: Attempts to catch a wild Pokémon, using a catch rate of 1.5×. If used in a trainer battle, nothing happens and the ball is lost.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/great-ball.png", null, "Great Ball", "Tries to catch a wild Pokémon. Success rate is 1.5×." },
                    { 3, 1, 200m, "A device for catching wild Pokémon. It’s thrown like a ball at a Pokémon, comfortably encapsulating its target.", "Used in battle: Attempts to catch a wild Pokémon, using a catch rate of 1×. If used in a trainer battle, nothing happens and the ball is lost.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/poke-ball.png", null, "Poké Ball", "Tries to catch a wild Pokémon." },
                    { 4, 2, 1000m, "A somewhat different Poké Ball that is more effective when attempting to catch Water- or Bug-type Pokémon.", "Used in battle: Attempts to catch a wild Pokémon. If the wild Pokémon is water- or bug-type, this ball has a catch rate of 3×. Otherwise, it has a catch rate of 1×. If used in a trainer battle, nothing happens and the ball is lost.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/net-ball.png", null, "Net Ball", "Tries to catch a wild Pokémon. Success rate is 3× for water and bug Pokémon." },
                    { 5, 2, 1000m, "A somewhat different Poké Ball that works especially well when catching Pokémon that live underwater.", "Used in battle: Attempts to catch a wild Pokémon. If the wild Pokémon was encountered by surfing or fishing, this ball has a catch rate of 3.5×. Otherwise, it has a catch rate of 1×. If used in a trainer battle, nothing happens and the ball is lost.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/dive-ball.png", null, "Dive Ball", "Tries to catch a wild Pokémon. Success rate is 3.5× when underwater, fishing, or surfing." },
                    { 6, 2, 1000m, "A somewhat different Poké Ball that becomes more effective the lower the level of the wild Pokémon.", "Used in battle: Attempts to catch a wild Pokémon. Has a catch rate given by `(40 - level) / 10`, where `level` is the wild Pokémon's level, to a maximum of 3.9× for level 1 Pokémon. If the wild Pokémon's level is higher than 30, this ball has a catch rate of 1×. If used in a trainer battle, nothing happens and the ball is lost.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/nest-ball.png", null, "Nest Ball", "Tries to catch a wild Pokémon. Success rate is 3.9× for level 1 Pokémon, and drops steadily to 1× at level 30." },
                    { 7, 2, 1000m, "A somewhat different Poké Ball that works especially well on a Pokémon species that has been caught before.", "Used in battle: Attempts to catch a wild Pokémon. If the wild Pokémon's species is marked as caught in the trainer's Pokédex, this ball has a catch rate of 3×. Otherwise, it has a catch rate of 1×. If used in a trainer battle, nothing happens and the ball is lost.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/repeat-ball.png", null, "Repeat Ball", "Tries to catch a wild Pokémon. Success rate is 3× for previously-caught Pokémon." },
                    { 8, 2, 1000m, "A somewhat different Poké Ball that becomes progressively more effective at catching Pokémon the more turns that are taken in battle.", "Used in battle: Attempts to catch a wild Pokémon. Has a catch rate of 1.1× on the first turn of the battle and increases by 0.1× every turn, to a maximum of 4× on turn 30. If used in a trainer battle, nothing happens and the ball is lost.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/timer-ball.png", null, "Timer Ball", "Tries to catch a wild Pokémon. Success rate increases by 0.1× (Gen V: 0.3×) every turn, to a max of 4×." },
                    { 9, 2, 3000m, "A particularly comfortable Poké Ball that makes a wild Pokémon quickly grow friendlier after being caught.", "Used in battle: Attempts to catch a wild Pokémon, using a catch rate of 1×. Whenever the caught Pokémon's happiness increases, it increases by one extra point. If used in a trainer battle, nothing happens and the ball is lost.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/luxury-ball.png", null, "Luxury Ball", "Tries to catch a wild Pokémon. Caught Pokémon start with 200 happiness." },
                    { 10, 2, 2000m, "A somewhat rare Poké Ball that was made as a commemorative item used to celebrate an event of some sort.", "Used in battle: Attempts to catch a wild Pokémon, using a catch rate of 1×. If used in a trainer battle, nothing happens and the ball is lost.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/premier-ball.png", null, "Premier Ball", "Tries to catch a wild Pokémon." },
                    { 11, 2, 1000m, "A somewhat different Poké Ball that makes it easier to catch wild Pokémon at night or in dark places such as caves.", "Used in battle: Attempts to catch a wild Pokémon. If it's currently nighttime or the wild Pokémon was encountered while walking in a cave, this ball has a catch rate of 3.5×. Otherwise, it has a catch rate of 1×. If used in a trainer battle, nothing happens and the ball is lost.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/dusk-ball.png", null, "Dusk Ball", "Tries to catch a wild Pokémon. Success rate is 3.5× at night and in caves." },
                    { 12, 3, 300m, "A remedial Poké Ball that restores the HP of a Pokémon caught with it and eliminates any status conditions.", "Used in battle: Attempts to catch a wild Pokémon, using a catch rate of 1×. The caught Pokémon's HP is immediately restored, PP for all its moves is restored, and any status ailment is cured. If used in a trainer battle, nothing happens and the ball is lost.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/heal-ball.png", null, "Heal Ball", "Tries to catch a wild Pokémon. Caught Pokémon are immediately healed." },
                    { 13, 2, 1000m, "A somewhat different Poké Ball that has a more successful catch rate if used at the start of a wild encounter.", "Used in battle: Attempts to catch a wild Pokémon, using a catch rate of 4× on the first turn of a battle, but 1× any other time. If used in a trainer battle, nothing happens and the ball is lost.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/quick-ball.png", null, "Quick Ball", "Tries to catch a wild Pokémon. Success rate is 4× (Gen V: 5×), but only on the first turn." },
                    { 14, 3, 200m, "A spray-type medicine for treating wounds. It can be used to restore 20 HP to a single Pokémon.", "Used on a friendly Pokémon: Restores 20 HP.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/potion.png", null, "Potion", "Restores 20 HP." },
                    { 15, 4, 200m, "A spray-type medicine for treating poisoning. It can be used to lift the effects of being poisoned from a single Pokémon.", "Used on a party Pokémon: Cures poison.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/antidote.png", null, "Antidote", "Cures poison." },
                    { 16, 4, 200m, "A spray-type medicine for treating burns. It can be used to heal a single Pokémon suffering from a burn.", "Used on a party Pokémon: Cures a burn.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/burn-heal.png", null, "Burn Heal", "Cures a burn." },
                    { 17, 4, 200m, "A spray-type medicine for treating freezing. It can be used to thaw out a single Pokémon that has been frozen solid.", "Used on a party Pokémon: Cures freezing.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/ice-heal.png", null, "Ice Heal", "Cures freezing." },
                    { 18, 4, 200m, "A spray-type medicine to wake the sleeping. It can be used to rouse a single Pokémon from the clutches of sleep.", "Used on a party Pokémon: Cures sleep.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/awakening.png", null, "Awakening", "Cures sleep." },
                    { 19, 4, 200m, "A spray-type medicine for treating paralysis. It can be used to free a single Pokémon that has been paralyzed.", "Used on a party Pokémon: Cures paralysis.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/paralyze-heal.png", null, "Paralyze Heal", "Cures paralysis." },
                    { 20, 3, 3000m, "A medicine that can be used to fully restore the HP of a single Pokémon and heal any status conditions it has.", "Used on a party Pokémon: Restores HP to full and cures any status ailment and confusion.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/full-restore.png", null, "Full Restore", "Restores HP to full and cures any status ailment and confusion." },
                    { 21, 3, 2500m, "A spray-type medicine for treating wounds. It can be used to completely restore the max HP of a single Pokémon.", "Used on a party Pokémon: Restores HP to full.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/max-potion.png", null, "Max Potion", "Restores HP to full." },
                    { 22, 3, 1500m, "A spray-type medicine for treating wounds. It can be used to restore 200 HP to a single Pokémon.", "Used on a party Pokémon: Restores 200 HP.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/hyper-potion.png", null, "Hyper Potion", "Restores 200 HP." },
                    { 23, 3, 700m, "A spray-type medicine for treating wounds. It can be used to restore 50 HP to a single Pokémon.", "Used on a party Pokémon: Restores 50 HP.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/super-potion.png", null, "Super Potion", "Restores 50 HP." },
                    { 24, 4, 400m, "A spray-type medicine that is broadly effective. It can be used to heal all the status conditions of a single Pokémon.", "Used on a party Pokémon: Cures any status ailment and confusion.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/full-heal.png", null, "Full Heal", "Cures any status ailment and confusion." },
                    { 25, 5, 2000m, "A medicine that can be used to revive a single Pokémon that has fainted. It also restores half of the Pokémon’s max HP.", "Used on a party Pokémon: Revives the Pokémon and restores half its HP.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/revive.png", null, "Revive", "Revives with half HP." },
                    { 26, 5, 4000m, "A medicine that can be used to revive a single Pokémon that has fainted. It also fully restores the Pokémon’s max HP.", "Used on a party Pokémon: Revives the Pokémon and restores its HP to full.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/max-revive.png", null, "Max Revive", "Revives with full HP." },
                    { 27, 3, 200m, "Water with high mineral content. It can be used to restore 50 HP to a single Pokémon.", "Used on a party Pokémon: Restores 50 HP.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/fresh-water.png", null, "Fresh Water", "Restores 50 HP." },
                    { 28, 3, 300m, "A highly carbonated soda drink. It can be used to restore 60 HP to a single Pokémon.", "Used on a party Pokémon: Restores 60 HP.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/soda-pop.png", null, "Soda Pop", "Restores 60 HP." },
                    { 29, 3, 400m, "A very sweet and refreshing drink. It can be used to restore 80 HP to a single Pokémon.", "Used on a party Pokémon: Restores 80 HP.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/lemonade.png", null, "Lemonade", "Restores 80 HP." },
                    { 30, 3, 600m, "A bottle of highly nutritious milk. It can be used to restore 100 HP to a single Pokémon.", "Used on a party Pokémon: Restores 100 HP.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/moomoo-milk.png", null, "Moomoo Milk", "Restores 100 HP." },
                    { 31, 3, 500m, "A very bitter medicinal powder. It can be used to restore 50 HP to a single Pokémon.", "Used on a party Pokémon: Restores 50 HP. Decreases happiness by 5/5/10.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/energy-powder.png", null, "Energy Powder", "Restores 50 HP, but lowers happiness." },
                    { 32, 3, 1200m, "An extremely bitter medicinal root. It can be used to restore 200 HP to a single Pokémon.", "Used on a party Pokémon: Restores 200 HP. Decreases happiness by 10/10/15.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/energy-root.png", null, "Energy Root", "Restores 200 HP, but lowers happiness." },
                    { 33, 4, 300m, "A very bitter medicinal powder. It can be used once to heal all the status conditions of a Pokémon.", "Used on a party Pokémon: Cures any status ailment. Decreases happiness by 5/5/10.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/heal-powder.png", null, "Heal Powder", "Cures any status ailment, but lowers happiness." },
                    { 34, 5, 2800m, "A terribly bitter medicinal herb. It revives a fainted Pokémon and fully restores its max HP.", "Used on a party Pokémon: Revives a fainted Pokémon and restores its HP to full. Decreases happiness by 10/10/15.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/revival-herb.png", null, "Revival Herb", "Revives with full HP, but lowers happiness." },
                    { 35, 6, 1200m, "This medicine can be used to restore 10 PP to a single selected move that has been learned by a Pokémon.", "Used on a party Pokémon: Restores 10 PP for a selected move.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/ether.png", null, "Ether", "Restores 10 PP for one move." },
                    { 36, 6, 2000m, "This medicine can be used to fully restore the PP of a single selected move that has been learned by a Pokémon.", "Used on a party Pokémon: Restores PP to full for a selected move.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/max-ether.png", null, "Max Ether", "Restores PP to full for one move." },
                    { 37, 6, 3000m, "This medicine can be used to restore 10 PP to each of the moves that have been learned by a Pokémon.", "Used on a party Pokémon: Restores 10 PP for each move.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/elixir.png", null, "Elixir", "Restores 10 PP for each move." },
                    { 38, 6, 4500m, "This medicine can be used to fully restore the PP of all of the moves that have been learned by a Pokémon.", "Used on a party Pokémon: Restores PP to full for each move.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/max-elixir.png", null, "Max Elixir", "Restores PP to full for each move." },
                    { 39, 4, 350m, "Lavaridge Town’s local specialty. It can be used once to heal all the status conditions of a Pokémon.", "Used on a party Pokémon: Cures any status ailment and confusion.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/lava-cookie.png", null, "Lava Cookie", "Cures any status ailment and confusion." },
                    { 40, 3, 200m, "A 100 percent pure juice made of Berries. It can be used to restore 20 HP to a single Pokémon.", "Used on a party Pokémon: Restores 20 HP.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/berry-juice.png", null, "Berry Juice", "Restores 20 HP." },
                    { 41, 5, 50000m, "This rare ash can revive all fainted Pokémon in a party. In doing so, it also fully restores their max HP.", "Used on a party Pokémon: Revives all fainted Pokémon in the party and restores their HP to full.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/sacred-ash.png", null, "Sacred Ash", "Revives all fainted Pokémon with full HP." },
                    { 42, 7, 10000m, "A nutritious drink for Pokémon. When consumed, it raises the HP base points of a single Pokémon.", "Used on a party Pokémon: Increases HP effort by 10, but won't increase it beyond 100. Increases happiness by 5/3/2.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/hp-up.png", null, "HP Up", "Raises HP effort and happiness." },
                    { 43, 7, 10000m, "A nutritious drink for Pokémon. When consumed, it raises the Attack base points of a single Pokémon.", "Used on a party Pokémon: Increases Attack effort by 10, but won't increase it beyond 100. Increases happiness by 5/3/2.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/protein.png", null, "Protein", "Raises Attack effort and happiness." },
                    { 44, 7, 10000m, "A nutritious drink for Pokémon. When consumed, it raises the Defense base points of a single Pokémon.", "Used on a party Pokémon: Increases Defense effort by 10, but won't increase it beyond 100. Increases happiness by 5/3/2.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/iron.png", null, "Iron", "Raises Defense effort and happiness." },
                    { 45, 7, 10000m, "A nutritious drink for Pokémon. When consumed, it raises the Speed base points of a single Pokémon.", "Used on a party Pokémon: Increases Speed effort by 10, but won't increase it beyond 100. Increases happiness by 5/3/2.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/carbos.png", null, "Carbos", "Raises Speed effort and happiness." },
                    { 46, 7, 10000m, "A nutritious drink for Pokémon. When consumed, it raises the Sp. Atk base points of a single Pokémon.", "Used on a party Pokémon: Increases Special Attack effort by 10, but won't increase it beyond 100. Increases happiness by 5/3/2.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/calcium.png", null, "Calcium", "Raises Special Attack effort and happiness." },
                    { 47, 7, 10000m, "A candy that is packed with energy. When consumed, it will instantly raise the level of a single Pokémon by one.", "Used on a party Pokémon: Increases level by 1. Increases happiness by 5/3/2.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/rare-candy.png", null, "Rare Candy", "Causes a level-up and raises happiness." },
                    { 48, 7, 10000m, "A medicine that slightly raises the max PP of a single selected move that has been learned by a Pokémon.", "Used on a party Pokémon: Increases a selected move's max PP by 20% its original max PP, to a maximum of 1.6×. Increases happiness by 5/3/2.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/pp-up.png", null, "PP Up", "Raises a move's max PP by 20%." },
                    { 49, 7, 10000m, "A nutritious drink for Pokémon. When consumed, it raises the Sp. Def base points of a single Pokémon.", "Used on a party Pokémon: Increases Special Defense effort by 10, but won't increase it beyond 100. Increases happiness by 5/3/2.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/zinc.png", null, "Zinc", "Raises Special Defense and happiness." },
                    { 50, 7, 10000m, "A medicine that optimally raises the max PP of a single selected move that has been learned by a Pokémon.", "Used on a party Pokémon: Increases a selected move's max PP to 1.6× its original max PP. Increases happiness by 5/3/2.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/pp-max.png", null, "PP Max", "Raises a move's max PP by 60%." },
                    { 51, 4, 350m, "The Old Chateau’s hidden specialty. It can be used once to heal all the status conditions of a Pokémon.", "Used on a party Pokémon: Cures any status ailment and confusion.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/old-gateau.png", null, "Old Gateau", "Cures any status ailment and confusion." },
                    { 52, 8, 1500m, "An item that prevents stat reduction among the Trainer’s party Pokémon for five turns after it is used in battle.", "Used on a party Pokémon in battle: Protects the target's stats from being lowered for the next five turns. Increases happiness by 1/1/0.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/guard-spec.png", null, "Guard Spec.", "Prevents stat changes in battle for five turns in battle. Raises happiness." },
                    { 53, 8, 1000m, "An item that greatly raises the critical-hit ratio of a Pokémon during a battle. It can be used only once and wears off if the Pokémon is withdrawn.", "Used on a party Pokémon in battle: Increases the target's critical hit chance by one stage until it leaves the field. Increases happiness by 1/1/0.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/dire-hit.png", null, "Dire Hit", "Increases the chance of a critical hit in battle. Raises happiness." },
                    { 54, 8, 1000m, "An item that sharply boosts the Attack stat of a Pokémon during a battle. It wears off once the Pokémon is withdrawn.", "Used on a party Pokémon in battle: Raises the target's Attack by one stage. Increases happiness by 1/1/0.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/x-attack.png", null, "X Attack", "Raises Attack by one stage in battle. Raises happiness." },
                    { 55, 8, 2000m, "An item that sharply boosts the Defense stat of a Pokémon during a battle. It wears off once the Pokémon is withdrawn.", "Used on a party Pokémon in battle: Raises the target's Defense by one stage. Increases happiness by 1/1/0.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/x-defense.png", null, "X Defense", "Raises Defense by one stage in battle. Raises happiness." },
                    { 56, 8, 1000m, "An item that sharply boosts the Speed stat of a Pokémon during a battle. It wears off once the Pokémon is withdrawn.", "Used on a party Pokémon in battle: Raises the target's Speed by one stage. Increases happiness by 1/1/0.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/x-speed.png", null, "X Speed", "Raises Speed by one stage in battle. Raises happiness." },
                    { 57, 8, 1000m, "An item that sharply boosts the accuracy of a Pokémon during a battle. It wears off once the Pokémon is withdrawn.", "Used on a party Pokémon in battle: Raises the target's accuracy by one stage. Increases happiness by 1/1/0.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/x-accuracy.png", null, "X Accuracy", "Raises accuracy by one stage in battle. Raises happiness." },
                    { 58, 8, 1000m, "An item that sharply boosts the Sp. Atk stat of a Pokémon during a battle. It wears off once the Pokémon is withdrawn.", "Used on a party Pokémon in battle: Raises the target's Special Attack by one stage. Increases happiness by 1/1/0.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/x-sp-atk.png", null, "X Sp. Atk", "Raises Special Attack by one stage in battle. Raises happiness." },
                    { 59, 8, 2000m, "An item that sharply boosts the Sp. Def stat of a Pokémon during a battle. It wears off once the Pokémon is withdrawn.", "Used on a party Pokémon in battle: Raises the target's Special Defense by one stage. Increases happiness by 1/1/0.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/x-sp-def.png", null, "X Sp. Def", "Raises Special Defense by one stage in battle. Raises happiness." },
                    { 60, 10, 300m, "A doll that attracts the attention of a Pokémon. It guarantees escape from any battle with wild Pokémon.", "Used in battle: Ends a wild battle. Cannot be used in trainer battles.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/poke-doll.png", null, "Poké Doll", "Ends a wild battle." },
                    { 61, 10, 100m, "A toy that attracts the attention of a Pokémon. It guarantees escape from any battle with wild Pokémon.", "Used in battle: Ends a wild battle. Cannot be used in trainer battles.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/fluffy-tail.png", null, "Fluffy Tail", "Ends a wild battle." },
                    { 62, 10, 20m, "A flute made from black glass. It makes it easier to encounter strong Pokémon in the place you use it.", "Used outside of battle: Decreases the wild Pokémon encounter rate by 50%.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/black-flute.png", null, "Black Flute", "Halves the wild Pokémon encounter rate." },
                    { 63, 10, 20m, "A flute made from white glass. It makes it easier to encounter weak Pokémon in the place you use it.", "Used outside of battle: Doubles the wild Pokémon encounter rate.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/white-flute.png", null, "White Flute", "Doubles the wild Pokémon encounter rate." },
                    { 64, 10, 700m, "An item that prevents any low-level wild Pokémon from jumping out at you for a while. It lasts longer than Repel.", "Used outside of battle: Trainer will skip encounters with wild Pokémon of a lower level than the lead party Pokémon. This effect wears off after the trainer takes 200 steps.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/super-repel.png", null, "Super Repel", "For 200 steps, prevents wild encounters of level lower than your party's lead Pokémon." },
                    { 65, 10, 900m, "An item that prevents any low-level wild Pokémon from jumping out at you for a while. It lasts longer than Super Repel.", "Used outside of battle: Trainer will skip encounters with wild Pokémon of a lower level than the lead party Pokémon. This effect wears off after the trainer takes 250 steps.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/max-repel.png", null, "Max Repel", "For 250 steps, prevents wild encounters of level lower than your party's lead Pokémon." },
                    { 66, 10, 300m, "A long and durable rope. Use it to escape instantly from locations like caves or dungeons. It can be used any number of times.", "Used outside of battle: Transports the trainer to the last-entered dungeon entrance. Cannot be used outside, in buildings, or in distortion world, sinnoh hall of origin 1, spear pillar, or turnback cave.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/escape-rope.png", null, "Escape Rope", "Transports user to the outside entrance of a cave." },
                    { 67, 10, 400m, "An item that prevents any low-level wild Pokémon from jumping out at you for a while.", "Used outside of battle: Trainer will skip encounters with wild Pokémon of a lower level than the lead party Pokémon. This effect wears off after the trainer takes 100 steps.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/repel.png", null, "Repel", "For 100 steps, prevents wild encounters of level lower than your party's lead Pokémon." },
                    { 68, 9, 3000m, "A peculiar stone that can make certain species of Pokémon evolve. It burns as red as the evening sun.", "Used on a party Pokémon: Evolves a Cottonee into Whimsicott, a Gloom into Bellossom, a Petilil into Lilligant, or a Sunkern into Sunflora.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/sun-stone.png", null, "Sun Stone", "Evolves a Cottonee into Whimsicott, a Gloom into Bellossom, a Petilil into Lilligant, or a Sunkern into Sunflora." },
                    { 69, 9, 3000m, "A peculiar stone that can make certain species of Pokémon evolve. It is as black as the night sky.", "Used on a party Pokémon: Evolves a Clefairy into Clefable, a Jigglypuff into Wigglytuff, a Munna into Musharna, a Nidorina into Nidoqueen, a Nidorino into Nidoking, or a Skitty into Delcatty.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/moon-stone.png", null, "Moon Stone", "Evolves a Clefairy into Clefable, a Jigglypuff into Wigglytuff, a Munna into Musharna, a Nidorina into Nidoqueen, a Nidorino into Nidoking, or a Skitty into Delcatty." },
                    { 70, 9, 3000m, "A peculiar stone that can make certain species of Pokémon evolve. The stone has a fiery orange heart.", "Used on a party Pokémon: Evolves an Eevee into Flareon, a Growlithe into Arcanine, a Pansear into Simisear, or a Vulpix into Ninetales.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/fire-stone.png", null, "Fire Stone", "Evolves an Eevee into Flareon, a Growlithe into Arcanine, a Pansear into Simisear, or a Vulpix into Ninetales." },
                    { 71, 9, 3000m, "A peculiar stone that can make certain species of Pokémon evolve. It has a distinct thunderbolt pattern.", "Used on a party Pokémon: Evolves an Eelektrik into Eelektross, an Eevee into Jolteon, or a Pikachu into Raichu.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/thunder-stone.png", null, "Thunder Stone", "Evolves an Eelektrik into Eelektross, an Eevee into Jolteon, or a Pikachu into Raichu." },
                    { 72, 9, 3000m, "A peculiar stone that can make certain species of Pokémon evolve. It is the blue of a pool of clear water.", "Used on a party Pokémon: Evolves an Eevee into Vaporeon, a Lombre into Ludicolo, a Panpour into Simipour, a Poliwhirl into Poliwrath, a Shellder into Cloyster, or a Staryu into Starmie.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/water-stone.png", null, "Water Stone", "Evolves an Eevee into Vaporeon, a Lombre into Ludicolo, a Panpour into Simipour, a Poliwhirl into Poliwrath, a Shellder into Cloyster, or a Staryu into Starmie." },
                    { 73, 9, 3000m, "A peculiar stone that can make certain species of Pokémon evolve. It has an unmistakable leaf pattern.", "Used on a party Pokémon: Evolves an Exeggcute into Exeggutor, a Gloom into Vileplume, a Nuzleaf into Shiftry, a Pansage into Simisage, or a Weepinbell into Victreebel.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/leaf-stone.png", null, "Leaf Stone", "Evolves an Exeggcute into Exeggutor, a Gloom into Vileplume, a Nuzleaf into Shiftry, a Pansage into Simisage, or a Weepinbell into Victreebel." },
                    { 74, 9, 3000m, "A peculiar stone that can make certain species of Pokémon evolve. It shines with a dazzling light.", "Used on a party Pokémon: Evolves a Minccino into Cinccino, a Roselia into Roserade, or a Togetic into Togekiss.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/shiny-stone.png", null, "Shiny Stone", "Evolves a Minccino into Cinccino, a Roselia into Roserade, or a Togetic into Togekiss." },
                    { 75, 9, 3000m, "A peculiar stone that can make certain species of Pokémon evolve. It holds shadows as dark as can be.", "Used on a party Pokémon: Evolves a Lampent into Chandelure, a Misdreavus into Mismagius, or a Murkrow into Honchkrow.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/dusk-stone.png", null, "Dusk Stone", "Evolves a Lampent into Chandelure, a Misdreavus into Mismagius, or a Murkrow into Honchkrow." },
                    { 76, 9, 3000m, "A peculiar stone that can make certain species of Pokémon evolve. It sparkles like a glittering eye.", "Used on a party Pokémon: Evolves a male Kirlia into Gallade or a female Snorunt into Froslass.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/dawn-stone.png", null, "Dawn Stone", "Evolves a male Kirlia into Gallade or a female Snorunt into Froslass." },
                    { 77, 9, 2000m, "A peculiar stone that can make certain species of Pokémon evolve. It's as round as a Pokémon Egg.", "Held by Happiny: Holder evolves into Chansey when it levels up during the daytime.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/oval-stone.png", null, "Oval Stone", "Level-up during the day on a Happiny: Holder evolves into Chansey." },
                    { 78, 12, 80m, "A Berry to be consumed by Pokémon. If a Pokémon holds one, it can recover from paralysis on its own in battle.", "Held in battle: When the holder is paralyzed, it consumes this item to cure the paralysis. Used on a party Pokémon: Cures paralysis.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/cheri-berry.png", null, "Cheri Berry", "Held: Consumed when paralyzed to cure paralysis." },
                    { 79, 12, 80m, "A Berry to be consumed by Pokémon. If a Pokémon holds one, it can recover from sleep on its own in battle.", "Held in battle: When the holder is asleep, it consumes this item to wake up. Used on a party Pokémon: Cures sleep.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/chesto-berry.png", null, "Chesto Berry", "Held: Consumed when asleep to cure sleep." },
                    { 80, 12, 80m, "A Berry to be consumed by Pokémon. If a Pokémon holds one, it can recover from poisoning on its own in battle.", "Held in battle: When the holder is poisoned, it consumes this item to cure the poison. Used on a party Pokémon: Cures poison.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/pecha-berry.png", null, "Pecha Berry", "Held: Consumed when poisoned to cure poison." },
                    { 81, 12, 80m, "A Berry to be consumed by Pokémon. If a Pokémon holds one, it can recover from a burn on its own in battle.", "Held in battle: When the holder is burned, it consumes this item to cure the burn. Used on a party Pokémon: Cures a burn.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/rawst-berry.png", null, "Rawst Berry", "Held: Consumed when burned to cure a burn." },
                    { 82, 12, 80m, "A Berry to be consumed by Pokémon. If a Pokémon holds one, it can recover from being frozen on its own in battle.", "Held in battle: When the holder is frozen, it consumes this item to thaw itself. Used on a party Pokémon: Cures freezing.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/aspear-berry.png", null, "Aspear Berry", "Held: Consumed when frozen to cure frozen." },
                    { 83, 12, 80m, "A Berry to be consumed by Pokémon. If a Pokémon holds one, it can restore 10 PP to a depleted move during battle.", "Held in battle: When the holder is out of PP for one of its moves, it consumes this item to restore 10 of that move's PP. Used on a party Pokémon: Restores 10 PP for a selected move.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/leppa-berry.png", null, "Leppa Berry", "Held: Consumed when a move runs out of PP to restore its PP by 10." },
                    { 84, 12, 80m, "A Berry to be consumed by Pokémon. If a Pokémon holds one, it can restore its own HP by 10 points during battle.", "Held in battle: When the holder has 1/2 its max HP remaining or less, it consumes this item to restore 10 HP. Used on a party Pokémon: Restores 10 HP.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/oran-berry.png", null, "Oran Berry", "Held: Consumed at 1/2 max HP to recover 10 HP." },
                    { 85, 12, 80m, "A Berry to be consumed by Pokémon. If a Pokémon holds one, it can recover from confusion on its own in battle.", "Held in battle: When the holder is confused, it consumes this item to cure the confusion. Used on a party Pokémon: Cures confusion.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/persim-berry.png", null, "Persim Berry", "Held: Consumed when confused to cure confusion." },
                    { 86, 12, 80m, "A Berry to be consumed by Pokémon. If a Pokémon holds one, it can recover from any status condition during battle.", "Held in battle: When the holder is afflicted with a major status ailment, it consumes this item to cure the ailment. Used on a party Pokémon: Cures any major status ailment.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/lum-berry.png", null, "Lum Berry", "Held: Consumed to cure any status condition or confusion." },
                    { 87, 12, 80m, "A Berry to be consumed by Pokémon. If a Pokémon holds one, it can restore its own HP by a small amount during battle.", "Held in battle: When the holder has 1/2 its max HP remaining or less, it consumes this item to restore 1/4 its max HP. Used on a party Pokémon: Restores 1/4 the Pokémon's max HP.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/sitrus-berry.png", null, "Sitrus Berry", "Held: Consumed at 1/2 max HP to recover 1/4 max HP." },
                    { 88, 12, 80m, "If held by a Pokémon, it restores the user's HP in a pinch, but it will cause confusion if the user hates the taste.", "Held in battle: When the holder has 1/2 its max HP remaining or less, it consumes this item to restore 1/8 its max HP. If the holder dislikes spicy flavors (i.e., has a nature that lowers Attack), it will also become confused.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/figy-berry.png", null, "Figy Berry", "Held: Consumed at 1/2 max HP to restore 1/8 max HP. Confuses Pokémon that dislike spicy flavor." },
                    { 89, 12, 80m, "If held by a Pokémon, it restores the user's HP in a pinch, but it will cause confusion if the user hates the taste.", "Held in battle: When the holder has 1/2 its max HP remaining or less, it consumes this item to restore 1/8 its max HP. If the holder dislikes dry flavors (i.e., has a nature that lowers Special Attack), it will also become confused.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/wiki-berry.png", null, "Wiki Berry", "Held: Consumed at 1/2 max HP to restore 1/8 max HP. Confuses Pokémon that dislike dry flavor." },
                    { 90, 12, 80m, "If held by a Pokémon, it restores the user's HP in a pinch, but it will cause confusion if the user hates the taste.", "Held in battle: When the holder has 1/2 its max HP remaining or less, it consumes this item to restore 1/8 its max HP. If the holder dislikes sweet flavors (i.e., has a nature that lowers Speed), it will also become confused.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/mago-berry.png", null, "Mago Berry", "Held: Consumed at 1/2 max HP to restore 1/8 max HP. Confuses Pokémon that dislike sweet flavor." },
                    { 91, 12, 80m, "If held by a Pokémon, it restores the user's HP in a pinch, but it will cause confusion if the user hates the taste.", "Held in battle: When the holder has 1/2 its max HP remaining or less, it consumes this item to restore 1/8 its max HP. If the holder dislikes bitter flavors (i.e., has a nature that lowers Special Defense), it will also become confused.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/aguav-berry.png", null, "Aguav Berry", "Held: Consumed at 1/2 max HP to restore 1/8 max HP. Confuses Pokémon that dislike bitter flavor." },
                    { 92, 12, 80m, "If held by a Pokémon, it restores the user's HP in a pinch, but it will cause confusion if the user hates the taste.", "Held in battle: When the holder has 1/2 its max HP remaining or less, it consumes this item to restore 1/8 its max HP. If the holder dislikes sour flavors (i.e., has a nature that lowers Defense), it will also become confused.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/iapapa-berry.png", null, "Iapapa Berry", "Held: Consumed at 1/2 max HP to restore 1/8 max HP. Confuses Pokémon that dislike sour flavor." },
                    { 93, 12, 200m, "Used to make Pokéblocks that will enhance your Coolness. Its red flesh is spicy when eaten.", "No effect; only useful for planting and cooking.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/razz-berry.png", null, "Razz Berry", "Used for creating PokéBlocks and Poffins." },
                    { 94, 12, 20m, "Used to make Pokéblocks that will enhance your Beauty. Its blue flesh is dry when eaten.", "No effect; only useful for planting and cooking.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/bluk-berry.png", null, "Bluk Berry", "Used for creating PokéBlocks and Poffins." },
                    { 95, 12, 200m, "Used to make Pokéblocks that will enhance your Cuteness. Its pink flesh is sweet when eaten.", "No effect; only useful for planting and cooking.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/nanab-berry.png", null, "Nanab Berry", "Used for creating PokéBlocks and Poffins." },
                    { 96, 12, 20m, "Used to make Pokéblocks that will enhance your Cleverness. Its green flesh is bitter when eaten.", "No effect; only useful for planting and cooking.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/wepear-berry.png", null, "Wepear Berry", "Used for creating PokéBlocks and Poffins." },
                    { 97, 12, 200m, "Used to make Pokéblocks that will enhance your Toughness. Its spiky skin is tough when eaten.", "No effect; only useful for planting and cooking.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/pinap-berry.png", null, "Pinap Berry", "Used for creating PokéBlocks and Poffins." },
                    { 98, 12, 20m, "Used to make Pokéblocks that will enhance your Beauty. Poffin cooking. Firm, dry, and sour.", "No effect; only useful for planting and cooking.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/pomeg-berry.png", null, "Pomeg Berry", "Used for creating PokéBlocks and Poffins." },
                    { 99, 12, 200m, "Used to make Pokéblocks that will enhance your Cuteness. Poffin cooking. Hard, sour, and dry.", "No effect; only useful for planting and cooking.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/kelpsy-berry.png", null, "Kelpsy Berry", "Used for creating PokéBlocks and Poffins." },
                    { 100, 12, 20m, "Used to make Pokéblocks that will enhance your Cleverness. Poffin cooking. Very dry and smoky.", "No effect; only useful for planting and cooking.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/qualot-berry.png", null, "Qualot Berry", "Used for creating PokéBlocks and Poffins." },
                    { 101, 12, 200m, "Used to make Pokéblocks that will enhance your Toughness. Poffin cooking. Hard and dry.", "No effect; only useful for planting and cooking.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/hondew-berry.png", null, "Hondew Berry", "Used for creating PokéBlocks and Poffins." },
                    { 102, 12, 20m, "Used to make Pokéblocks that will enhance your Beauty. Poffin cooking. Very dry.", "No effect; only useful for planting and cooking.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/grepa-berry.png", null, "Grepa Berry", "Used for creating PokéBlocks and Poffins." }
                });

            migrationBuilder.InsertData(
                table: "Moves",
                columns: new[] { "Id", "Accuracy", "DamageClassId", "Name", "PP", "PokeTypeId", "Power" },
                values: new object[,]
                {
                    { 1, 85, 2, "Mega Punch", 20, 1, 80 },
                    { 2, 100, 3, "Razor Wind", 10, 1, 80 },
                    { 3, null, 1, "Swords Dance", 20, 1, null },
                    { 4, null, 1, "Whirlwind", 20, 1, null },
                    { 5, 75, 2, "Mega Kick", 5, 1, 120 },
                    { 6, 90, 1, "Toxic", 10, 4, null },
                    { 7, 30, 2, "Horn Drill", 5, 1, null },
                    { 8, 100, 2, "Body Slam", 15, 1, 85 },
                    { 9, 85, 2, "Take Down", 20, 1, 90 },
                    { 10, 100, 2, "Double-Edge", 15, 1, 120 },
                    { 11, 100, 3, "Bubble Beam", 20, 11, 65 },
                    { 12, 100, 3, "Water Gun", 25, 11, 40 },
                    { 13, 100, 3, "Ice Beam", 10, 15, 90 },
                    { 14, 70, 3, "Blizzard", 5, 15, 110 },
                    { 15, 90, 3, "Hyper Beam", 5, 1, 150 },
                    { 16, 100, 2, "Pay Day", 20, 1, 40 },
                    { 17, 80, 2, "Submission", 20, 2, 80 },
                    { 18, 100, 2, "Counter", 20, 2, null },
                    { 19, 100, 2, "Seismic Toss", 20, 2, null },
                    { 20, 100, 2, "Rage", 20, 1, 20 },
                    { 21, 100, 3, "Mega Drain", 15, 12, 40 },
                    { 22, 100, 3, "Solar Beam", 10, 12, 120 },
                    { 23, 100, 3, "Dragon Rage", 10, 16, null },
                    { 24, 100, 3, "Thunderbolt", 15, 13, 90 },
                    { 25, 70, 3, "Thunder", 10, 13, 110 },
                    { 26, 100, 2, "Earthquake", 10, 5, 100 },
                    { 27, 30, 2, "Fissure", 5, 5, null },
                    { 28, 100, 2, "Dig", 10, 5, 80 },
                    { 29, 100, 3, "Psychic", 10, 14, 90 },
                    { 30, null, 1, "Teleport", 20, 14, null },
                    { 31, null, 1, "Mimic", 10, 1, null },
                    { 32, null, 1, "Double Team", 15, 1, null },
                    { 33, null, 1, "Reflect", 20, 14, null },
                    { 34, null, 2, "Bide", 10, 1, null },
                    { 35, null, 1, "Metronome", 10, 1, null },
                    { 36, 100, 2, "Self-Destruct", 5, 1, 200 },
                    { 37, 75, 2, "Egg Bomb", 10, 1, 100 },
                    { 38, 85, 3, "Fire Blast", 5, 10, 110 },
                    { 39, null, 1, "Swift", 3, 1, 20 },
                    { 40, 100, 2, "Skull Bash", 10, 1, 130 },
                    { 41, null, 1, "Soft-Boiled", 10, 1, null },
                    { 42, 100, 3, "Dream Eater", 15, 14, 100 },
                    { 43, 90, 2, "Sky Attack", 5, 3, 140 },
                    { 44, null, 1, "Rest", 10, 14, null },
                    { 45, 90, 1, "Thunder Wave", 20, 13, null },
                    { 46, 100, 3, "Psywave", 15, 14, null },
                    { 47, 100, 2, "Explosion", 5, 1, 250 },
                    { 48, 90, 2, "Rock Slide", 10, 6, 75 },
                    { 49, 100, 3, "Tri Attack", 10, 1, 80 },
                    { 50, null, 1, "Substitute", 10, 1, null },
                    { 51, null, 1, "Roost", 10, 3, null },
                    { 52, 70, 3, "Focus Blast", 5, 2, 120 },
                    { 53, 100, 3, "Energy Ball", 10, 12, 90 },
                    { 54, 100, 2, "False Swipe", 40, 1, 40 },
                    { 55, 100, 3, "Brine", 10, 11, 65 },
                    { 56, null, 2, "Fling", 10, 17, null },
                    { 57, 90, 3, "Charge Beam", 10, 13, 50 },
                    { 58, null, 1, "Endure", 10, 1, null },
                    { 59, 100, 3, "Dragon Pulse", 10, 16, 85 },
                    { 60, 100, 2, "Drain Punch", 10, 2, 75 },
                    { 61, 85, 1, "Will-O-Wisp", 15, 10, null },
                    { 62, 100, 3, "Silver Wind", 5, 7, 60 },
                    { 63, 100, 1, "Embargo", 15, 17, null },
                    { 64, 100, 2, "Explosion", 5, 1, 250 },
                    { 65, 100, 2, "Shadow Claw", 15, 8, 70 },
                    { 66, 100, 2, "Payback", 10, 17, 50 },
                    { 67, null, 1, "Recycle", 10, 1, null },
                    { 68, 90, 2, "Giga Impact", 5, 1, 150 },
                    { 69, null, 1, "Rock Polish", 20, 6, null },
                    { 70, 100, 1, "Flash", 20, 1, null },
                    { 71, 80, 2, "Stone Edge", 5, 6, 100 },
                    { 72, 100, 2, "Avalanche", 10, 15, 60 },
                    { 73, 90, 1, "Thunder Wave", 20, 13, null },
                    { 74, 100, 2, "Gyro Ball", 5, 9, null },
                    { 75, null, 1, "Swords Dance", 20, 1, null },
                    { 76, null, 1, "Stealth Rock", 20, 6, null },
                    { 77, null, 1, "Psych Up", 10, 1, null },
                    { 78, 100, 1, "Captivate", 20, 1, null },
                    { 79, 100, 3, "Dark Pulse", 15, 17, 80 },
                    { 80, 90, 2, "Rock Slide", 10, 6, 75 },
                    { 81, 100, 2, "X-Scissor", 15, 7, 80 },
                    { 82, null, 1, "Sleep Talk", 10, 1, null },
                    { 83, 100, 2, "Natural Gift", 15, 1, null },
                    { 84, 100, 2, "Poison Jab", 20, 4, 80 },
                    { 85, 100, 3, "Dream Eater", 15, 14, 100 },
                    { 86, 100, 3, "Grass Knot", 20, 12, null },
                    { 87, 85, 1, "Swagger", 15, 1, null },
                    { 88, 100, 2, "Pluck", 20, 3, 60 },
                    { 89, 100, 2, "U-turn", 20, 7, 70 },
                    { 90, null, 1, "Substitute", 10, 1, null }
                });

            migrationBuilder.InsertData(
                table: "PokemonTypes",
                columns: new[] { "Id", "PokeTypeId", "PokemonId" },
                values: new object[,]
                {
                    { 1, 12, 1 },
                    { 2, 4, 1 },
                    { 3, 12, 2 },
                    { 4, 4, 2 },
                    { 5, 12, 3 },
                    { 6, 4, 3 },
                    { 7, 10, 4 },
                    { 8, 10, 5 },
                    { 9, 10, 6 },
                    { 10, 3, 6 },
                    { 11, 11, 7 },
                    { 12, 11, 8 },
                    { 13, 11, 9 },
                    { 14, 7, 10 },
                    { 15, 7, 11 },
                    { 16, 7, 12 },
                    { 17, 3, 12 },
                    { 18, 7, 13 },
                    { 19, 4, 13 },
                    { 20, 7, 14 },
                    { 21, 4, 14 },
                    { 22, 7, 15 },
                    { 23, 4, 15 },
                    { 24, 1, 16 },
                    { 25, 3, 16 },
                    { 26, 1, 17 },
                    { 27, 3, 17 },
                    { 28, 1, 18 },
                    { 29, 3, 18 },
                    { 30, 1, 19 },
                    { 31, 1, 20 },
                    { 32, 1, 21 },
                    { 33, 3, 21 },
                    { 34, 1, 22 },
                    { 35, 3, 22 },
                    { 36, 4, 23 },
                    { 37, 4, 24 },
                    { 38, 13, 25 },
                    { 39, 13, 26 },
                    { 40, 5, 27 },
                    { 41, 5, 28 },
                    { 42, 4, 29 },
                    { 43, 4, 30 },
                    { 44, 4, 31 },
                    { 45, 5, 31 },
                    { 46, 4, 32 },
                    { 47, 4, 33 },
                    { 48, 4, 34 },
                    { 49, 5, 34 },
                    { 50, 18, 35 },
                    { 51, 18, 36 },
                    { 52, 10, 37 },
                    { 53, 10, 38 },
                    { 54, 1, 39 },
                    { 55, 18, 39 },
                    { 56, 1, 40 },
                    { 57, 18, 40 },
                    { 58, 4, 41 },
                    { 59, 3, 41 },
                    { 60, 4, 42 },
                    { 61, 3, 42 },
                    { 62, 12, 43 },
                    { 63, 4, 43 },
                    { 64, 12, 44 },
                    { 65, 4, 44 },
                    { 66, 12, 45 },
                    { 67, 4, 45 },
                    { 68, 7, 46 },
                    { 69, 12, 46 },
                    { 70, 7, 47 },
                    { 71, 12, 47 },
                    { 72, 7, 48 },
                    { 73, 4, 48 },
                    { 74, 7, 49 },
                    { 75, 4, 49 },
                    { 76, 5, 50 },
                    { 77, 5, 51 },
                    { 78, 1, 52 },
                    { 79, 1, 53 },
                    { 80, 11, 54 },
                    { 81, 11, 55 },
                    { 82, 2, 56 },
                    { 83, 2, 57 },
                    { 84, 10, 58 },
                    { 85, 10, 59 },
                    { 86, 11, 60 },
                    { 87, 11, 61 },
                    { 88, 11, 62 },
                    { 89, 2, 62 },
                    { 90, 14, 63 },
                    { 91, 14, 64 },
                    { 92, 14, 65 },
                    { 93, 2, 66 },
                    { 94, 2, 67 },
                    { 95, 2, 68 },
                    { 96, 12, 69 },
                    { 97, 4, 69 },
                    { 98, 12, 70 },
                    { 99, 4, 70 },
                    { 100, 12, 71 },
                    { 101, 4, 71 },
                    { 102, 11, 72 },
                    { 103, 4, 72 },
                    { 104, 11, 73 },
                    { 105, 4, 73 },
                    { 106, 6, 74 },
                    { 107, 5, 74 },
                    { 108, 6, 75 },
                    { 109, 5, 75 },
                    { 110, 6, 76 },
                    { 111, 5, 76 },
                    { 112, 10, 77 },
                    { 113, 10, 78 },
                    { 114, 11, 79 },
                    { 115, 14, 79 },
                    { 116, 11, 80 },
                    { 117, 14, 80 },
                    { 118, 13, 81 },
                    { 119, 9, 81 },
                    { 120, 13, 82 },
                    { 121, 9, 82 },
                    { 122, 1, 83 },
                    { 123, 3, 83 },
                    { 124, 1, 84 },
                    { 125, 3, 84 },
                    { 126, 1, 85 },
                    { 127, 3, 85 },
                    { 128, 11, 86 },
                    { 129, 11, 87 },
                    { 130, 15, 87 },
                    { 131, 4, 88 },
                    { 132, 4, 89 },
                    { 133, 11, 90 },
                    { 134, 11, 91 },
                    { 135, 15, 91 },
                    { 136, 8, 92 },
                    { 137, 4, 92 },
                    { 138, 8, 93 },
                    { 139, 4, 93 },
                    { 140, 8, 94 },
                    { 141, 4, 94 },
                    { 142, 6, 95 },
                    { 143, 5, 95 },
                    { 144, 14, 96 },
                    { 145, 14, 97 },
                    { 146, 11, 98 },
                    { 147, 11, 99 },
                    { 148, 13, 100 },
                    { 149, 13, 101 },
                    { 150, 12, 102 },
                    { 151, 14, 102 },
                    { 152, 12, 103 },
                    { 153, 14, 103 },
                    { 154, 5, 104 },
                    { 155, 5, 105 },
                    { 156, 2, 106 },
                    { 157, 2, 107 },
                    { 158, 1, 108 },
                    { 159, 4, 109 },
                    { 160, 4, 110 },
                    { 161, 5, 111 },
                    { 162, 6, 111 },
                    { 163, 5, 112 },
                    { 164, 6, 112 },
                    { 165, 1, 113 },
                    { 166, 12, 114 },
                    { 167, 1, 115 },
                    { 168, 11, 116 },
                    { 169, 11, 117 },
                    { 170, 11, 118 },
                    { 171, 11, 119 },
                    { 172, 11, 120 },
                    { 173, 11, 121 },
                    { 174, 14, 121 },
                    { 175, 14, 122 },
                    { 176, 18, 122 },
                    { 177, 7, 123 },
                    { 178, 3, 123 },
                    { 179, 15, 124 },
                    { 180, 14, 124 },
                    { 181, 13, 125 },
                    { 182, 10, 126 },
                    { 183, 7, 127 },
                    { 184, 1, 128 },
                    { 185, 11, 129 },
                    { 186, 11, 130 },
                    { 187, 3, 130 },
                    { 188, 11, 131 },
                    { 189, 15, 131 },
                    { 190, 1, 132 },
                    { 191, 1, 133 },
                    { 192, 11, 134 },
                    { 193, 13, 135 },
                    { 194, 10, 136 },
                    { 195, 1, 137 },
                    { 196, 6, 138 },
                    { 197, 11, 138 },
                    { 198, 6, 139 },
                    { 199, 11, 139 },
                    { 200, 6, 140 },
                    { 201, 11, 140 },
                    { 202, 6, 141 },
                    { 203, 11, 141 },
                    { 204, 6, 142 },
                    { 205, 3, 142 },
                    { 206, 1, 143 },
                    { 207, 15, 144 },
                    { 208, 3, 144 },
                    { 209, 13, 145 },
                    { 210, 3, 145 },
                    { 211, 10, 146 },
                    { 212, 3, 146 },
                    { 213, 16, 147 },
                    { 214, 16, 148 },
                    { 215, 16, 149 },
                    { 216, 3, 149 },
                    { 217, 14, 150 },
                    { 218, 14, 151 }
                });

            migrationBuilder.InsertData(
                table: "Items",
                columns: new[] { "Id", "CategoryId", "Cost", "Description", "Effect", "Image", "MoveId", "Name", "ShortEffect" },
                values: new object[,]
                {
                    { 103, 11, 40000m, "The target is attacked by a kick launched with muscle-packed power.", "Teaches Focus Punch to a compatible Pokémon.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/tm-normal.png", 1, "TM01", "Teaches Hone Claws to a compatible Pokémon. (Gen IV & III: Focus Punch Gen II: DynamicPunch Gen I: Mega Punch)" },
                    { 104, 11, 1000m, "Numerous coins are hurled at the target to inflict damage. Money is earned after the battle.", "Teaches Dragon Claw to a compatible Pokémon.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/tm-normal.png", 2, "TM02", "Teaches Dragon Claw to a compatible Pokémon. (Gen II: Headbutt Gen I: Razor Wind)" },
                    { 105, 11, 50000m, "The target is punched with a fiery fist. This may also leave the target with a burn.", "Teaches Water Pulse to a compatible Pokémon.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/tm-normal.png", 3, "TM03", "Teaches Psyshock to a compatible Pokémon. (Gen IV & III: Water Pulse Gen II: Curse Gen I: Swords Dance)" },
                    { 106, 11, 50000m, "The target is punched with an icy fist. This may also leave the target frozen.", "Teaches Calm Mind to a compatible Pokémon.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/tm-normal.png", 4, "TM04", "Teaches Calm Mind to a compatible Pokémon. (Gen II: Rollout Gen I: Whirlwind)" },
                    { 107, 11, 50000m, "The target is punched with an electrified fist. This may also leave the target with paralysis.", "Teaches Roar to a compatible Pokémon.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/tm-normal.png", 5, "TM05", "Teaches Roar to a compatible Pokémon. (Gen I: Mega Kick)" },
                    { 108, 11, 1000m, "The user flies up into the sky and then strikes its target on the next turn.", "Teaches Toxic to a compatible Pokémon.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/tm-normal.png", 6, "TM06", "Teaches Toxic to a compatible Pokémon." },
                    { 109, 11, 1000m, "Sharp spikes are shot at the target in rapid succession. They hit two to five times in a row.", "Teaches Hail to a compatible Pokémon.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/tm-normal.png", 7, "TM07", "Teaches Hail to a compatible Pokémon. (Gen II: Zap Cannon Gen I: Horn Drill)" },
                    { 110, 11, 1000m, "The user scatters curious leaves that chase the target. This attack never misses.", "Teaches Hidden Power to a compatible Pokémon.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/tm-normal.png", 10, "TM10", "Teaches Hidden Power to a compatible Pokémon. (Gen I: Double-Edge)" },
                    { 111, 11, 1000m, "In this two-turn attack, the user gathers light, then blasts a bundled beam on the next turn.", "Teaches Sunny Day to a compatible Pokémon.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/tm-normal.png", 11, "TM11", "Teaches Sunny Day to a compatible Pokémon. (Gen I: BubbleBeam)" },
                    { 112, 11, 50000m, "In this two-turn attack, the user gathers light and fills a blade with the light’s energy, attacking the target on the next turn.", "Teaches Taunt to a compatible Pokémon.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/tm-normal.png", 12, "TM12", "Teaches Taunt to a compatible Pokémon. (Gen II: Sweet Scent Gen I: Water Gun)" },
                    { 113, 11, 10000m, "The target becomes trapped within a fierce vortex of fire that rages for four to five turns.", "Teaches Ice Beam to a compatible Pokémon.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/tm-normal.png", 13, "TM13", "Teaches Ice Beam to a compatible Pokémon. (Gen II: Snore)" },
                    { 114, 11, 1000m, "The user launches a weak jolt of electricity that paralyzes the target.", "Teaches Blizzard to a compatible Pokémon.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/tm-normal.png", 14, "TM14", "Teaches Blizzard to a compatible Pokémon." },
                    { 115, 11, 1000m, "The user burrows into the ground, then attacks on the next turn.", "Teaches Hyper Beam to a compatible Pokémon.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/tm-normal.png", 15, "TM15", "Teaches Hyper Beam to a compatible Pokémon." },
                    { 116, 11, 1000m, "An earsplitting screech harshly lowers the target’s Defense stat.", "Teaches Light Screen to a compatible Pokémon.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/tm-normal.png", 16, "TM16", "Teaches Light Screen to a compatible Pokémon. (Gen II: Icy Wind Gen I: Pay Day)" },
                    { 117, 11, 10000m, "A wondrous wall of light is put up to reduce damage from special attacks for five turns.", "Teaches Protect to a compatible Pokémon.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/tm-normal.png", 17, "TM17", "Teaches Protect to a compatible Pokémon. (Gen I: Submission)" },
                    { 118, 11, 10000m, "A wondrous wall of light is put up to reduce damage from physical attacks for five turns.", "Teaches Rain Dance to a compatible Pokémon.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/tm-normal.png", 18, "TM18", "Teaches Rain Dance to a compatible Pokémon. (Gen I: Counter)" },
                    { 119, 11, 10000m, "The user creates a protective field that prevents status conditions for five turns.", "Teaches Giga Drain to a compatible Pokémon.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/tm-normal.png", 19, "TM19", "Teaches Telekinesis to a compatible Pokémon. (Gen IV & III & II: Giga Drain Gen I: Seismic Toss)" },
                    { 120, 11, 100000m, "The user attacks everything around it by causing an explosion. The user faints upon using this move.", "Teaches Safeguard to a compatible Pokémon.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/tm-normal.png", 20, "TM20", "Teaches Safeguard to a compatible Pokémon. (Gen II: Endure Gen I: Rage)" },
                    { 121, 11, 1000m, "The user goes to sleep for two turns. This fully restores the user’s HP and heals any status conditions.", "Teaches Frustration to a compatible Pokémon.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/tm-normal.png", 21, "TM21", "Teaches Frustration to a compatible Pokémon. (Gen I: Mega Drain)" },
                    { 122, 11, 1000m, "Large boulders are hurled at opposing Pokémon to inflict damage. This may also make the opposing Pokémon flinch.", "Teaches SolarBeam to a compatible Pokémon.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/tm-normal.png", 22, "TM22", "Teaches SolarBeam to a compatible Pokémon." },
                    { 123, 11, 10000m, "The user attacks and steals the target’s held item simultaneously. The user can’t steal anything if it already holds an item.", "Teaches Iron Tail to a compatible Pokémon.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/tm-normal.png", 23, "TM23", "Teaches Smack Down to a compatible Pokémon. (Gen IV & III & II: Iron Tail Gen I: Dragon Rage)" },
                    { 124, 11, 1000m, "This attack can be used only if the user is asleep. The harsh noise may also make the target flinch.", "Teaches Thunderbolt to a compatible Pokémon.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/tm-normal.png", 24, "TM24", "Teaches Thunderbolt to a compatible Pokémon. (Gen II: DragonBreath)" },
                    { 125, 11, 10000m, "This move enables the user to protect itself from all attacks. Its chance of failing rises if it is used in succession.", "Teaches Thunder to a compatible Pokémon.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/tm-normal.png", 25, "TM25", "Teaches Thunder to a compatible Pokémon." },
                    { 126, 11, 1000m, "The user frightens the target with a scary face to harshly lower its Speed stat.", "Teaches Earthquake to a compatible Pokémon.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/tm-normal.png", 26, "TM26", "Teaches Earthquake to a compatible Pokémon." },
                    { 127, 11, 1000m, "The user attacks with a gust of chilled air. This also lowers opposing Pokémon’s Speed stats.", "Teaches Return to a compatible Pokémon.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/tm-normal.png", 27, "TM27", "Teaches Return to a compatible Pokémon. (Gen I: Fissure)" },
                    { 128, 11, 100000m, "A nutrient-draining attack. The user’s HP is restored by half the damage taken by the target.", "Teaches Dig to a compatible Pokémon.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/tm-normal.png", 28, "TM28", "Teaches Dig to a compatible Pokémon." },
                    { 129, 11, 1000m, "The user gazes at the target rather charmingly, making it less wary. This harshly lowers the target’s Attack stat.", "Teaches Psychic to a compatible Pokémon.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/tm-normal.png", 29, "TM29", "Teaches Psychic to a compatible Pokémon." },
                    { 130, 11, 1000m, "The target is hit with wings of steel. This may also raise the user’s Defense stat.", "Teaches Shadow Ball to a compatible Pokémon.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/tm-normal.png", 30, "TM30", "Teaches Shadow Ball to a compatible Pokémon. (Gen I: Teleport)" },
                    { 131, 11, 1000m, "If it is the opposite gender of the user, the target becomes infatuated and less likely to attack.", "Teaches Brick Break to a compatible Pokémon.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/tm-normal.png", 31, "TM31", "Teaches Brick Break to a compatible Pokémon. (Gen II: Mud-Slap Gen I: Mimic)" },
                    { 132, 11, 10000m, "A five-turn sandstorm is summoned to hurt all combatants except Rock, Ground, and Steel types. It raises the Sp. Def stat of Rock types.", "Teaches Double Team to a compatible Pokémon.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/tm-normal.png", 32, "TM32", "Teaches Double Team to a compatible Pokémon." },
                    { 133, 11, 10000m, "The user summons a heavy rain that falls for five turns, powering up Water-type moves. It lowers the power of Fire-type moves.", "Teaches Reflect to a compatible Pokémon.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/tm-normal.png", 33, "TM33", "Teaches Reflect to a compatible Pokémon. (Gen II: Ice Punch)" },
                    { 134, 11, 10000m, "The user intensifies the sun for five turns, powering up Fire-type moves. It lowers the power of Water-type moves.", "Teaches Shock Wave to a compatible Pokémon.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/tm-normal.png", 34, "TM34", "Teaches Sludge Wave to a compatible Pokémon. (Gen IV & III: Shock Wave Gen II: Swagger Gen I: Bide)" },
                    { 135, 11, 10000m, "The user summons a hailstorm lasting five turns. It damages all Pokémon except Ice types.", "Teaches Flamethrower to a compatible Pokémon.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/tm-normal.png", 35, "TM35", "Teaches Flamethrower to a compatible Pokémon. (Gen II: Sleep Talk Gen I: Metronome)" },
                    { 136, 11, 10000m, "A unique attack that varies in type depending on the Pokémon using it.", "Teaches Sludge Bomb to a compatible Pokémon.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/tm-normal.png", 36, "TM36", "Teaches Sludge Bomb to a compatible Pokémon. (Gen II: Mud-Slap Gen I: Self-Destruct)" },
                    { 137, 11, 10000m, "The user summons a heavy rain that falls for five turns, powering up Water-type moves. It lowers the power of Fire-type moves.", "Teaches Sandstorm to a compatible Pokémon.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/tm-normal.png", 37, "TM37", "Teaches Sandstorm to a compatible Pokémon. (Gen II: Egg Bomb Gen I: Eggbomb)" },
                    { 138, 11, 10000m, "The user summons a hailstorm lasting five turns. It damages all Pokémon except Ice types.", "Teaches Fire Blast to a compatible Pokémon.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/tm-normal.png", 38, "TM38", "Teaches Fire Blast to a compatible Pokémon." },
                    { 139, 11, 1000m, "A unique attack that varies in type depending on the Pokémon using it.", "Teaches Swift to a compatible Pokémon.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/tm-normal.png", 39, "TM39", "Teaches Swift to a compatible Pokémon. (Gen I: Swift)" },
                    { 140, 11, 1000m, "The user attacks by wrapping its opponent in a fierce wind that flies up into the sky. It may also confuse the target.", "Teaches Skull Bash to a compatible Pokémon.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/tm-normal.png", 40, "TM40", "Teaches Skull Bash to a compatible Pokémon." },
                    { 141, 11, 1000m, "The user crunches up the target with sharp fangs. It may also lower the target’s Defense stat.", "Teaches Earthquake to a compatible Pokémon.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/tm-normal.png", 41, "TM41", "Teaches Earthquake to a compatible Pokémon. (Gen I: Earthquake)" },
                    { 142, 11, 1000m, "The user lands and rests its body. It restores the user’s HP by up to half of its max HP.", "Teaches Facade to a compatible Pokémon.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/tm-normal.png", 42, "TM42", "Teaches Facade to a compatible Pokémon. (Gen I: Dream Eater)" },
                    { 143, 11, 1000m, "The user draws power to attack by using its held Berry. The Berry determines its type and power.", "Teaches Flame Charge to a compatible Pokémon.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/tm-normal.png", 43, "TM43", "Teaches Flame Charge to a compatible Pokémon." },
                    { 144, 11, 1000m, "The user hardens its body’s surface like iron, sharply raising its Defense stat.", "Teaches Rest to a compatible Pokémon.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/tm-normal.png", 44, "TM44", "Teaches Rest to a compatible Pokémon. (Gen I: Rest)" },
                    { 145, 11, 1000m, "The user attacks with a punch. This may also lower the target’s Defense stat.", "Teaches Attract to a compatible Pokémon.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/tm-normal.png", 45, "TM45", "Teaches Attract to a compatible Pokémon. (Gen I: Attract)" },
                    { 146, 11, 1000m, "The user attacks the target with a hazardous, full-power headbutt. The target also takes damage from the user’s Life Orb.", "Teaches Thief to a compatible Pokémon.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/tm-normal.png", 46, "TM46", "Teaches Thief to a compatible Pokémon." },
                    { 147, 11, 1000m, "A barrier reflects back to the target moves like Leech Seed and moves that damage status.", "Teaches Low Sweep to a compatible Pokémon.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/tm-normal.png", 47, "TM47", "Teaches Low Sweep to a compatible Pokémon. (Gen I: Submission)" },
                    { 148, 11, 10000m, "The user slams a barrage of hard-shelled seeds down on the target from above.", "Teaches Round to a compatible Pokémon.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/tm-normal.png", 48, "TM48", "Teaches Round to a compatible Pokémon. (Gen I: Rock Slide)" },
                    { 149, 11, 10000m, "The user charges at the target using every bit of its power. The user can’t move on the next turn.", "Teaches Echoed Voice to a compatible Pokémon.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/tm-normal.png", 49, "TM49", "Teaches Echoed Voice to a compatible Pokémon." },
                    { 150, 11, 1000m, "The user scatters curious leaves that chase the target. This attack never misses.", "Teaches Overheat to a compatible Pokémon.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/tm-normal.png", 50, "TM50", "Teaches Overheat to a compatible Pokémon." },
                    { 151, 11, 1000m, "The user traps the target inside a harshly raging sandstorm for four to five turns.", "Teaches Snatch to a compatible Pokémon.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/tm-normal.png", 49, "TM49", "Teaches Echoed Voice to a compatible Pokémon. (Gen IV & III: Snatch Gen II: Fury Cutter Gen I: Tri Attack)" },
                    { 152, 11, 10000m, "The user forcefully shoots seeds at the target two to five times in a row.", "Teaches Overheat to a compatible Pokémon.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/tm-normal.png", 50, "TM50", "Teaches Overheat to a compatible Pokémon. (Gen II: Nightmare Gen I: Substitute)" },
                    { 153, 11, 1000m, "The user launches sharp icicles at the target two to five times in a row.", "Teaches Roost to a compatible Pokémon.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/tm-normal.png", 51, "TM51", "Teaches Ally Switch to a compatible Pokémon. (Gen IV: Roost)" },
                    { 154, 11, 100000m, "The user bounces up high, then drops on the target on the second turn. This may also leave the target with paralysis.", "Teaches Focus Blast to a compatible Pokémon.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/tm-normal.png", 52, "TM52", "Teaches Focus Blast to a compatible Pokémon." },
                    { 155, 11, 1000m, "The user attacks by hurling a blob of mud at the target. This also lowers the target’s Speed stat.", "Teaches Energy Ball to a compatible Pokémon.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/tm-normal.png", 53, "TM53", "Teaches Energy Ball to a compatible Pokémon." },
                    { 156, 11, 1000m, "The user hurls hard rocks at the target. Two to five rocks are launched in a row.", "Teaches False Swipe to a compatible Pokémon.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/tm-normal.png", 54, "TM54", "Teaches False Swipe to a compatible Pokémon." },
                    { 157, 11, 10000m, "If the target’s HP is half or less, this attack will hit with double the power.", "Teaches Brine to a compatible Pokémon.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/tm-normal.png", 55, "TM55", "Teaches Scald to a compatible Pokémon. (Gen IV: Brine)" },
                    { 158, 11, 1000m, "After making its attack, the user rushes back to switch places with a party Pokémon in waiting.", "Teaches Fling to a compatible Pokémon.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/tm-normal.png", 56, "TM56", "Teaches Fling to a compatible Pokémon." },
                    { 159, 11, 1000m, "The user stores power, then attacks. If the user moves after the target, this attack’s power will be doubled.", "Teaches Charge Beam to a compatible Pokémon.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/tm-normal.png", 57, "TM57", "Teaches Charge Beam to a compatible Pokémon." },
                    { 160, 11, 1000m, "If the target has already taken some damage in the same turn, this attack’s power is doubled.", "Teaches Endure to a compatible Pokémon.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/tm-normal.png", 58, "TM58", "Teaches Sky Drop to a compatible Pokémon. (Gen IV: Endure)" },
                    { 161, 11, 30000m, "The user employs its psychic power to switch changes to its Attack and Sp. Atk stats with the target.", "Teaches Drain Punch to a compatible Pokémon.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/tm-normal.png", 60, "TM60", "Teaches Quash to a compatible Pokémon. (Gen IV: Drain Punch)" },
                    { 162, 11, 30000m, "The user employs its psychic power to switch changes to its Defense and Sp. Def stats with the target.", "Teaches Will-O-Wisp to a compatible Pokémon.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/tm-normal.png", 61, "TM61", "Teaches Will-O-Wisp to a compatible Pokémon." },
                    { 163, 11, 30000m, "The user exchanges Speed stats with the target.", "Teaches Silver Wind to a compatible Pokémon.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/tm-normal.png", 62, "TM62", "Teaches Acrobatics to a compatible Pokémon. (Gen IV: Silver Wind)" },
                    { 164, 11, 50000m, "An energy-draining punch. The user’s HP is restored by half the damage taken by the target.", "Teaches Embargo to a compatible Pokémon.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/tm-normal.png", 63, "TM63", "Teaches Embargo to a compatible Pokémon." },
                    { 165, 11, 1000m, "The power of this attack move is doubled if the user has been hurt by the target in the same turn.", "Teaches Explosion to a compatible Pokémon.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/tm-normal.png", 64, "TM64", "Teaches Explosion to a compatible Pokémon." },
                    { 166, 11, 1000m, "The user slashes with a sharp claw made from shadows. Critical hits land more easily.", "Teaches Shadow Claw to a compatible Pokémon.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/tm-normal.png", 65, "TM65", "Teaches Shadow Claw to a compatible Pokémon." },
                    { 167, 11, 30000m, "The user bites with electrified fangs. This may also make the target flinch or leave it with paralysis.", "Teaches Payback to a compatible Pokémon.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/tm-normal.png", 66, "TM66", "Teaches Payback to a compatible Pokémon." },
                    { 168, 11, 30000m, "The user bites with cold-infused fangs. This may also make the target flinch or leave it frozen.", "Teaches Recycle to a compatible Pokémon.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/tm-normal.png", 67, "TM67", "Teaches Retaliate to a compatible Pokémon. (Gen IV: Recycle)" },
                    { 169, 11, 30000m, "The user bites with flame-cloaked fangs. This may also make the target flinch or leave it with a burn.", "Teaches Giga Impact to a compatible Pokémon.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/tm-normal.png", 68, "TM68", "Teaches Giga Impact to a compatible Pokémon." },
                    { 170, 11, 1000m, "The user tears at the target with blades formed by psychic power. Critical hits land more easily.", "Teaches Rock Polish to a compatible Pokémon.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/tm-normal.png", 69, "TM69", "Teaches Rock Polish to a compatible Pokémon." },
                    { 171, 11, 50000m, "The user creates a bizarre area in which slower Pokémon get to move first for five turns.", "Teaches Flash to a compatible Pokémon.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/tm-normal.png", 70, "TM70", "Teaches Flash to a compatible Pokémon." },
                    { 172, 11, 50000m, "The user creates a bizarre area in which Pokémon’s Defense and Sp. Def stats are swapped for five turns.", "Teaches Stone Edge to a compatible Pokémon.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/tm-normal.png", 71, "TM71", "Teaches Stone Edge to a compatible Pokémon." },
                    { 173, 11, 50000m, "The user creates a bizarre area in which Pokémon’s held items lose their effects for five turns.", "Teaches Avalanche to a compatible Pokémon.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/tm-normal.png", 72, "TM72", "Teaches Volt Switch to a compatible Pokémon. (Gen IV: Avalanche)" },
                    { 174, 11, 1000m, "A slashing attack with a poisonous blade that may also poison the target. Critical hits land more easily.", "Teaches Thunder Wave to a compatible Pokémon.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/tm-normal.png", 73, "TM73", "Teaches Thunder Wave to a compatible Pokémon." },
                    { 175, 11, 1000m, "The user drenches the target in a special poisonous liquid. This move’s power is doubled if the target is poisoned.", "Teaches Gyro Ball to a compatible Pokémon.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/tm-normal.png", 74, "TM74", "Teaches Gyro Ball to a compatible Pokémon." },
                    { 176, 11, 1000m, "The user makes a swift attack on the target’s legs, which lowers the target’s Speed stat.", "Teaches Swords Dance to a compatible Pokémon.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/tm-normal.png", 75, "TM75", "Teaches Swords Dance to a compatible Pokémon." },
                    { 177, 11, 10000m, "The user attacks the target with a song. Others can join in the Round to increase the power of the attack.", "Teaches Stealth Rock to a compatible Pokémon.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/tm-normal.png", 76, "TM76", "Teaches Struggle Bug to a compatible Pokémon. (Gen IV: Stealth Rock)" },
                    { 178, 11, 1000m, "This relentless attack does massive damage to a target affected by status conditions.", "Teaches Psych Up to a compatible Pokémon.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/tm-normal.png", 77, "TM77", "Teaches Psych Up to a compatible Pokémon." },
                    { 179, 11, 1000m, "The user nimbly strikes the target. If the user is not holding an item, this attack inflicts massive damage.", "Teaches Captivate to a compatible Pokémon.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/tm-normal.png", 78, "TM78", "Teaches Bulldoze to a compatible Pokémon. (Gen IV: Captivate)" },
                    { 180, 11, 1000m, "The user gets revenge for a fainted ally. If an ally fainted in the previous turn, this move’s power is increased.", "Teaches Dark Pulse to a compatible Pokémon.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/tm-normal.png", 79, "TM79", "Teaches Frost Breath to a compatible Pokémon. (Gen IV: Dark Pulse)" },
                    { 181, 11, 1000m, "After making its attack, the user rushes back to switch places with a party Pokémon in waiting.", "Teaches Rock Slide to a compatible Pokémon.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/tm-normal.png", 80, "TM80", "Teaches Rock Slide to a compatible Pokémon." },
                    { 182, 11, 1000m, "The user strikes everything around it by stomping down on the ground. This lowers the Speed stats of those hit.", "Teaches X-Scissor to a compatible Pokémon.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/tm-normal.png", 81, "TM81", "Teaches X-Scissor to a compatible Pokémon." },
                    { 183, 11, 1000m, "The user attacks and captures opposing Pokémon using an electric net. This lowers their Speed stats.", "Teaches Sleep Talk to a compatible Pokémon.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/tm-normal.png", 82, "TM82", "Teaches Dragon Tail to a compatible Pokémon. (Gen IV: Sleep Talk)" },
                    { 184, 11, 100000m, "The user cuts its target with sharp shells. This may also lower the target’s Defense stat.", "Teaches Natural Gift to a compatible Pokémon.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/tm-normal.png", 83, "TM83", "Teaches Work Up to a compatible Pokémon. (Gen IV: Natural Gift)" },
                    { 185, 11, 1000m, "The user attacks by striking the target with its hard tail. It hits the target two to five times in a row.", "Teaches Poison Jab to a compatible Pokémon.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/tm-normal.png", 84, "TM84", "Teaches Poison Jab to a compatible Pokémon." },
                    { 186, 11, 1000m, "The user yells as if it’s ranting about something, which lowers the Sp. Atk stats of opposing Pokémon.", "Teaches Dream Eater to a compatible Pokémon.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/tm-normal.png", 85, "TM85", "Teaches Dream Eater to a compatible Pokémon." },
                    { 187, 11, 1000m, "The user vanishes somewhere, then strikes the target on the next turn. This move hits even if the target protects itself.", "Teaches Grass Knot to a compatible Pokémon.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/tm-normal.png", 86, "TM86", "Teaches Grass Knot to a compatible Pokémon." },
                    { 188, 11, 1000m, "The user steals the target’s HP with a kiss. The user’s HP is restored by over half of the damage taken by the target.", "Teaches Swagger to a compatible Pokémon.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/tm-normal.png", 87, "TM87", "Teaches Swagger to a compatible Pokémon." },
                    { 189, 11, 20000m, "The user turns the ground to grass for five turns. This restores the HP of Pokémon on the ground a little every turn and powers up Grass-type moves.", "Teaches Pluck to a compatible Pokémon.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/tm-normal.png", 88, "TM88", "Teaches Pluck to a compatible Pokémon." },
                    { 190, 11, 20000m, "This protects Pokémon on the ground from status conditions and halves damage from Dragon-type moves for five turns.", "Teaches U-Turn to a compatible Pokémon.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/tm-normal.png", 89, "TM89", "Teaches U-turn to a compatible Pokémon." },
                    { 191, 11, 20000m, "The user electrifies the ground for five turns, powering up Electric-type moves. Pokémon on the ground no longer fall asleep.", "Teaches Substitute to a compatible Pokémon.", "https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/tm-normal.png", 90, "TM90", "Teaches Substitute to a compatible Pokémon." }
                });

            migrationBuilder.InsertData(
                table: "PokemonLearnableMoves",
                columns: new[] { "Id", "MoveId", "PokemonId" },
                values: new object[,]
                {
                    { 1, 10, 1 },
                    { 2, 6, 1 },
                    { 3, 20, 1 },
                    { 4, 31, 1 },
                    { 5, 33, 1 },
                    { 6, 34, 1 },
                    { 7, 70, 1 },
                    { 8, 44, 1 },
                    { 9, 50, 1 },
                    { 10, 58, 1 },
                    { 11, 87, 1 },
                    { 12, 78, 1 },
                    { 13, 10, 2 },
                    { 14, 6, 2 },
                    { 15, 20, 2 },
                    { 16, 31, 2 },
                    { 17, 33, 2 },
                    { 18, 34, 2 },
                    { 19, 70, 2 },
                    { 20, 44, 2 },
                    { 21, 50, 2 },
                    { 22, 58, 2 },
                    { 23, 87, 2 },
                    { 24, 78, 2 },
                    { 25, 10, 3 },
                    { 26, 26, 3 },
                    { 27, 6, 3 },
                    { 28, 20, 3 },
                    { 29, 31, 3 },
                    { 30, 33, 3 },
                    { 31, 34, 3 },
                    { 32, 70, 3 },
                    { 33, 44, 3 },
                    { 34, 50, 3 },
                    { 35, 58, 3 },
                    { 36, 87, 3 },
                    { 37, 78, 3 },
                    { 38, 10, 4 },
                    { 39, 17, 4 },
                    { 40, 18, 4 },
                    { 41, 28, 4 },
                    { 42, 6, 4 },
                    { 43, 31, 4 },
                    { 44, 33, 4 },
                    { 45, 34, 4 },
                    { 46, 39, 4 },
                    { 47, 44, 4 },
                    { 48, 50, 4 },
                    { 49, 58, 4 },
                    { 50, 87, 4 },
                    { 51, 61, 4 },
                    { 52, 56, 4 },
                    { 53, 78, 4 },
                    { 54, 10, 5 },
                    { 55, 17, 5 },
                    { 56, 18, 5 },
                    { 57, 28, 5 },
                    { 58, 6, 5 },
                    { 59, 31, 5 },
                    { 60, 33, 5 },
                    { 61, 34, 5 },
                    { 62, 39, 5 },
                    { 63, 44, 5 },
                    { 64, 50, 5 },
                    { 65, 58, 5 },
                    { 66, 87, 5 },
                    { 67, 61, 5 },
                    { 68, 56, 5 },
                    { 69, 78, 5 },
                    { 70, 10, 6 },
                    { 71, 17, 6 },
                    { 72, 18, 6 },
                    { 73, 26, 6 },
                    { 74, 27, 6 },
                    { 75, 28, 6 },
                    { 76, 6, 6 },
                    { 77, 31, 6 },
                    { 78, 33, 6 },
                    { 79, 34, 6 },
                    { 80, 39, 6 },
                    { 81, 44, 6 },
                    { 82, 50, 6 },
                    { 83, 58, 6 },
                    { 84, 87, 6 },
                    { 85, 61, 6 },
                    { 86, 51, 6 },
                    { 87, 56, 6 },
                    { 88, 78, 6 },
                    { 89, 10, 7 },
                    { 90, 14, 7 },
                    { 91, 17, 7 },
                    { 92, 18, 7 },
                    { 93, 28, 7 },
                    { 94, 6, 7 },
                    { 95, 20, 7 },
                    { 96, 31, 7 },
                    { 97, 33, 7 },
                    { 98, 34, 7 },
                    { 99, 44, 7 },
                    { 100, 50, 7 },
                    { 101, 58, 7 },
                    { 102, 87, 7 },
                    { 103, 55, 7 },
                    { 104, 56, 7 },
                    { 105, 78, 7 },
                    { 106, 10, 8 },
                    { 107, 14, 8 },
                    { 108, 17, 8 },
                    { 109, 18, 8 },
                    { 110, 28, 8 },
                    { 111, 6, 8 },
                    { 112, 20, 8 },
                    { 113, 31, 8 },
                    { 114, 33, 8 },
                    { 115, 34, 8 },
                    { 116, 44, 8 },
                    { 117, 50, 8 },
                    { 118, 58, 8 },
                    { 119, 87, 8 },
                    { 120, 55, 8 },
                    { 121, 56, 8 },
                    { 122, 78, 8 },
                    { 123, 10, 9 },
                    { 124, 14, 9 },
                    { 125, 17, 9 },
                    { 126, 18, 9 },
                    { 127, 26, 9 },
                    { 128, 27, 9 },
                    { 129, 28, 9 },
                    { 130, 6, 9 },
                    { 131, 20, 9 },
                    { 132, 31, 9 },
                    { 133, 33, 9 },
                    { 134, 34, 9 },
                    { 135, 44, 9 },
                    { 136, 50, 9 },
                    { 137, 58, 9 },
                    { 138, 87, 9 },
                    { 139, 55, 9 },
                    { 140, 56, 9 },
                    { 141, 72, 9 },
                    { 142, 78, 9 },
                    { 143, 10, 12 },
                    { 144, 6, 12 },
                    { 145, 29, 12 },
                    { 146, 20, 12 },
                    { 147, 30, 12 },
                    { 148, 31, 12 },
                    { 149, 33, 12 },
                    { 150, 34, 12 },
                    { 151, 39, 12 },
                    { 152, 70, 12 },
                    { 153, 46, 12 },
                    { 154, 44, 12 },
                    { 155, 50, 12 },
                    { 156, 58, 12 },
                    { 157, 87, 12 },
                    { 158, 51, 12 },
                    { 159, 89, 12 },
                    { 160, 10, 15 },
                    { 161, 6, 15 },
                    { 162, 31, 15 },
                    { 163, 33, 15 },
                    { 164, 34, 15 },
                    { 165, 39, 15 },
                    { 166, 70, 15 },
                    { 167, 44, 15 },
                    { 168, 50, 15 },
                    { 169, 58, 15 },
                    { 170, 87, 15 },
                    { 171, 51, 15 },
                    { 172, 89, 15 },
                    { 173, 66, 15 },
                    { 174, 81, 15 },
                    { 175, 78, 15 },
                    { 176, 10, 16 },
                    { 177, 6, 16 },
                    { 178, 20, 16 },
                    { 179, 31, 16 },
                    { 180, 33, 16 },
                    { 181, 34, 16 },
                    { 182, 39, 16 },
                    { 183, 44, 16 },
                    { 184, 50, 16 },
                    { 185, 58, 16 },
                    { 186, 87, 16 },
                    { 187, 88, 16 },
                    { 188, 89, 16 },
                    { 189, 78, 16 },
                    { 190, 10, 17 },
                    { 191, 6, 17 },
                    { 192, 20, 17 },
                    { 193, 31, 17 },
                    { 194, 33, 17 },
                    { 195, 34, 17 },
                    { 196, 39, 17 },
                    { 197, 44, 17 },
                    { 198, 50, 17 },
                    { 199, 58, 17 },
                    { 200, 87, 17 },
                    { 201, 88, 17 },
                    { 202, 89, 17 },
                    { 203, 78, 17 },
                    { 204, 10, 18 },
                    { 205, 6, 18 },
                    { 206, 20, 18 },
                    { 207, 31, 18 },
                    { 208, 33, 18 },
                    { 209, 34, 18 },
                    { 210, 39, 18 },
                    { 211, 44, 18 },
                    { 212, 50, 18 },
                    { 213, 58, 18 },
                    { 214, 87, 18 },
                    { 215, 88, 18 },
                    { 216, 89, 18 },
                    { 217, 78, 18 },
                    { 218, 10, 19 },
                    { 219, 14, 19 },
                    { 220, 24, 19 },
                    { 221, 25, 19 },
                    { 222, 28, 19 },
                    { 223, 6, 19 },
                    { 224, 20, 19 },
                    { 225, 31, 19 },
                    { 226, 34, 19 },
                    { 227, 39, 19 },
                    { 228, 44, 19 },
                    { 229, 50, 19 },
                    { 230, 58, 19 },
                    { 231, 87, 19 },
                    { 232, 88, 19 },
                    { 233, 89, 19 },
                    { 234, 78, 19 },
                    { 235, 10, 20 },
                    { 236, 14, 20 },
                    { 237, 24, 20 },
                    { 238, 25, 20 },
                    { 239, 28, 20 },
                    { 240, 6, 20 },
                    { 241, 20, 20 },
                    { 242, 31, 20 },
                    { 243, 34, 20 },
                    { 244, 39, 20 },
                    { 245, 44, 20 },
                    { 246, 50, 20 },
                    { 247, 58, 20 },
                    { 248, 87, 20 },
                    { 249, 88, 20 },
                    { 250, 89, 20 },
                    { 251, 78, 20 },
                    { 252, 4, 21 },
                    { 253, 10, 21 },
                    { 254, 6, 21 },
                    { 255, 20, 21 },
                    { 256, 31, 21 },
                    { 257, 34, 21 },
                    { 258, 39, 21 },
                    { 259, 44, 21 },
                    { 260, 50, 21 },
                    { 261, 58, 21 },
                    { 262, 87, 21 },
                    { 263, 88, 21 },
                    { 264, 89, 21 },
                    { 265, 78, 21 },
                    { 266, 4, 22 },
                    { 267, 10, 22 },
                    { 268, 6, 22 },
                    { 269, 20, 22 },
                    { 270, 31, 22 },
                    { 271, 34, 22 },
                    { 272, 39, 22 },
                    { 273, 44, 22 },
                    { 274, 50, 22 },
                    { 275, 58, 22 },
                    { 276, 87, 22 },
                    { 277, 89, 22 },
                    { 278, 78, 22 },
                    { 279, 10, 23 },
                    { 280, 26, 23 },
                    { 281, 27, 23 },
                    { 282, 28, 23 },
                    { 283, 6, 23 },
                    { 284, 20, 23 },
                    { 285, 31, 23 },
                    { 286, 34, 23 },
                    { 287, 44, 23 },
                    { 288, 50, 23 },
                    { 289, 58, 23 },
                    { 290, 87, 23 },
                    { 291, 66, 23 },
                    { 292, 78, 23 },
                    { 293, 10, 24 },
                    { 294, 26, 24 },
                    { 295, 27, 24 },
                    { 296, 28, 24 },
                    { 297, 6, 24 },
                    { 298, 20, 24 },
                    { 299, 31, 24 },
                    { 300, 34, 24 },
                    { 301, 44, 24 },
                    { 302, 50, 24 },
                    { 303, 58, 24 },
                    { 304, 87, 24 },
                    { 305, 66, 24 },
                    { 306, 78, 24 },
                    { 307, 10, 25 },
                    { 308, 17, 25 },
                    { 309, 24, 25 },
                    { 310, 28, 25 },
                    { 311, 6, 25 },
                    { 312, 20, 25 },
                    { 313, 31, 25 },
                    { 314, 33, 25 },
                    { 315, 34, 25 },
                    { 316, 70, 25 },
                    { 317, 44, 25 },
                    { 318, 50, 25 },
                    { 319, 58, 25 },
                    { 320, 87, 25 },
                    { 321, 56, 25 },
                    { 322, 78, 25 },
                    { 323, 10, 26 },
                    { 324, 17, 26 },
                    { 325, 24, 26 },
                    { 326, 25, 26 },
                    { 327, 28, 26 },
                    { 328, 6, 26 },
                    { 329, 20, 26 },
                    { 330, 31, 26 },
                    { 331, 33, 26 },
                    { 332, 34, 26 },
                    { 333, 39, 26 },
                    { 334, 70, 26 },
                    { 335, 44, 26 },
                    { 336, 50, 26 },
                    { 337, 58, 26 },
                    { 338, 87, 26 },
                    { 339, 56, 26 },
                    { 340, 78, 26 },
                    { 341, 10, 27 },
                    { 342, 17, 27 },
                    { 343, 26, 27 },
                    { 344, 27, 27 },
                    { 345, 28, 27 },
                    { 346, 6, 27 },
                    { 347, 20, 27 },
                    { 348, 31, 27 },
                    { 349, 34, 27 },
                    { 350, 44, 27 },
                    { 351, 50, 27 },
                    { 352, 58, 27 },
                    { 353, 87, 27 },
                    { 354, 56, 27 },
                    { 355, 81, 27 },
                    { 356, 78, 27 },
                    { 357, 10, 28 },
                    { 358, 17, 28 },
                    { 359, 26, 28 },
                    { 360, 27, 28 },
                    { 361, 28, 28 },
                    { 362, 6, 28 },
                    { 363, 20, 28 },
                    { 364, 31, 28 },
                    { 365, 34, 28 },
                    { 366, 44, 28 },
                    { 367, 50, 28 },
                    { 368, 58, 28 },
                    { 369, 87, 28 },
                    { 370, 56, 28 },
                    { 371, 81, 28 },
                    { 372, 78, 28 },
                    { 373, 10, 29 },
                    { 374, 14, 29 },
                    { 375, 24, 29 },
                    { 376, 25, 29 },
                    { 377, 28, 29 },
                    { 378, 6, 29 },
                    { 379, 20, 29 },
                    { 380, 31, 29 },
                    { 381, 33, 29 },
                    { 382, 34, 29 },
                    { 383, 44, 29 },
                    { 384, 50, 29 },
                    { 385, 58, 29 },
                    { 386, 87, 29 },
                    { 387, 10, 30 },
                    { 388, 14, 30 },
                    { 389, 24, 30 },
                    { 390, 25, 30 },
                    { 391, 28, 30 },
                    { 392, 6, 30 },
                    { 393, 20, 30 },
                    { 394, 31, 30 },
                    { 395, 33, 30 },
                    { 396, 34, 30 },
                    { 397, 44, 30 },
                    { 398, 50, 30 },
                    { 399, 58, 30 },
                    { 400, 87, 30 },
                    { 401, 10, 31 },
                    { 402, 14, 31 },
                    { 403, 17, 31 },
                    { 404, 18, 31 },
                    { 405, 24, 31 },
                    { 406, 25, 31 },
                    { 407, 26, 31 },
                    { 408, 27, 31 },
                    { 409, 28, 31 },
                    { 410, 6, 31 },
                    { 411, 20, 31 },
                    { 412, 31, 31 },
                    { 413, 33, 31 },
                    { 414, 34, 31 },
                    { 415, 44, 31 },
                    { 416, 50, 31 },
                    { 417, 58, 31 },
                    { 418, 87, 31 },
                    { 419, 56, 31 },
                    { 420, 72, 31 },
                    { 421, 78, 31 },
                    { 422, 10, 32 },
                    { 423, 14, 32 },
                    { 424, 24, 32 },
                    { 425, 25, 32 },
                    { 426, 28, 32 },
                    { 427, 6, 32 },
                    { 428, 20, 32 },
                    { 429, 31, 32 },
                    { 430, 33, 32 },
                    { 431, 34, 32 },
                    { 432, 44, 32 },
                    { 433, 50, 32 },
                    { 434, 58, 32 },
                    { 435, 87, 32 },
                    { 436, 10, 33 },
                    { 437, 14, 33 },
                    { 438, 24, 33 },
                    { 439, 25, 33 },
                    { 440, 28, 33 },
                    { 441, 6, 33 },
                    { 442, 20, 33 },
                    { 443, 31, 33 },
                    { 444, 33, 33 },
                    { 445, 34, 33 },
                    { 446, 44, 33 },
                    { 447, 50, 33 },
                    { 448, 58, 33 },
                    { 449, 87, 33 },
                    { 450, 10, 34 },
                    { 451, 14, 34 },
                    { 452, 17, 34 },
                    { 453, 18, 34 },
                    { 454, 24, 34 },
                    { 455, 25, 34 },
                    { 456, 26, 34 },
                    { 457, 27, 34 },
                    { 458, 28, 34 },
                    { 459, 6, 34 },
                    { 460, 20, 34 },
                    { 461, 31, 34 },
                    { 462, 33, 34 },
                    { 463, 34, 34 },
                    { 464, 44, 34 },
                    { 465, 50, 34 },
                    { 466, 58, 34 },
                    { 467, 87, 34 },
                    { 468, 56, 34 },
                    { 469, 72, 34 },
                    { 470, 78, 34 },
                    { 471, 10, 35 },
                    { 472, 14, 35 },
                    { 473, 17, 35 },
                    { 474, 18, 35 },
                    { 475, 24, 35 },
                    { 476, 25, 35 },
                    { 477, 28, 35 },
                    { 478, 6, 35 },
                    { 479, 29, 35 },
                    { 480, 20, 35 },
                    { 481, 30, 35 },
                    { 482, 31, 35 },
                    { 483, 33, 35 },
                    { 484, 34, 35 },
                    { 485, 39, 35 },
                    { 486, 70, 35 },
                    { 487, 46, 35 },
                    { 488, 44, 35 },
                    { 489, 50, 35 },
                    { 490, 58, 35 },
                    { 491, 87, 35 },
                    { 492, 67, 35 },
                    { 493, 56, 35 },
                    { 494, 78, 35 },
                    { 495, 10, 36 },
                    { 496, 14, 36 },
                    { 497, 17, 36 },
                    { 498, 18, 36 },
                    { 499, 24, 36 },
                    { 500, 25, 36 },
                    { 501, 28, 36 },
                    { 502, 6, 36 },
                    { 503, 29, 36 },
                    { 504, 20, 36 },
                    { 505, 30, 36 },
                    { 506, 31, 36 },
                    { 507, 33, 36 },
                    { 508, 34, 36 },
                    { 509, 39, 36 },
                    { 510, 70, 36 },
                    { 511, 46, 36 },
                    { 512, 44, 36 },
                    { 513, 50, 36 },
                    { 514, 58, 36 },
                    { 515, 87, 36 },
                    { 516, 67, 36 },
                    { 517, 56, 36 },
                    { 518, 78, 36 },
                    { 519, 10, 37 },
                    { 520, 28, 37 },
                    { 521, 6, 37 },
                    { 522, 20, 37 },
                    { 523, 31, 37 },
                    { 524, 33, 37 },
                    { 525, 34, 37 },
                    { 526, 39, 37 },
                    { 527, 44, 37 },
                    { 528, 50, 37 },
                    { 529, 58, 37 },
                    { 530, 87, 37 },
                    { 531, 10, 38 },
                    { 532, 28, 38 },
                    { 533, 6, 38 },
                    { 534, 20, 38 },
                    { 535, 31, 38 },
                    { 536, 33, 38 },
                    { 537, 34, 38 },
                    { 538, 39, 38 },
                    { 539, 44, 38 },
                    { 540, 50, 38 },
                    { 541, 58, 38 },
                    { 542, 87, 38 },
                    { 543, 61, 38 },
                    { 544, 66, 38 },
                    { 545, 78, 38 },
                    { 546, 14, 39 },
                    { 547, 17, 39 },
                    { 548, 18, 39 },
                    { 549, 24, 39 },
                    { 550, 25, 39 },
                    { 551, 28, 39 },
                    { 552, 6, 39 },
                    { 553, 29, 39 },
                    { 554, 20, 39 },
                    { 555, 30, 39 },
                    { 556, 31, 39 },
                    { 557, 33, 39 },
                    { 558, 34, 39 },
                    { 559, 35, 39 },
                    { 560, 36, 39 },
                    { 561, 39, 39 },
                    { 562, 70, 39 },
                    { 563, 46, 39 },
                    { 564, 50, 39 },
                    { 565, 58, 39 },
                    { 566, 87, 39 },
                    { 567, 67, 39 },
                    { 568, 56, 39 },
                    { 569, 78, 39 },
                    { 570, 10, 40 },
                    { 571, 14, 40 },
                    { 572, 17, 40 },
                    { 573, 18, 40 },
                    { 574, 24, 40 },
                    { 575, 25, 40 },
                    { 576, 28, 40 },
                    { 577, 6, 40 },
                    { 578, 29, 40 },
                    { 579, 20, 40 },
                    { 580, 30, 40 },
                    { 581, 31, 40 },
                    { 582, 33, 40 },
                    { 583, 34, 40 },
                    { 584, 35, 40 },
                    { 585, 36, 40 },
                    { 586, 39, 40 },
                    { 587, 70, 40 },
                    { 588, 46, 40 },
                    { 589, 44, 40 },
                    { 590, 50, 40 },
                    { 591, 58, 40 },
                    { 592, 87, 40 },
                    { 593, 67, 40 },
                    { 594, 56, 40 },
                    { 595, 78, 40 },
                    { 596, 4, 41 },
                    { 597, 10, 41 },
                    { 598, 6, 41 },
                    { 599, 20, 41 },
                    { 600, 31, 41 },
                    { 601, 34, 41 },
                    { 602, 39, 41 },
                    { 603, 44, 41 },
                    { 604, 50, 41 },
                    { 605, 58, 41 },
                    { 606, 87, 41 },
                    { 607, 51, 41 },
                    { 608, 88, 41 },
                    { 609, 89, 41 },
                    { 610, 66, 41 },
                    { 611, 78, 41 },
                    { 612, 4, 42 },
                    { 613, 10, 42 },
                    { 614, 6, 42 },
                    { 615, 20, 42 },
                    { 616, 31, 42 },
                    { 617, 34, 42 },
                    { 618, 39, 42 },
                    { 619, 44, 42 },
                    { 620, 50, 42 },
                    { 621, 58, 42 },
                    { 622, 87, 42 },
                    { 623, 51, 42 },
                    { 624, 88, 42 },
                    { 625, 89, 42 },
                    { 626, 66, 42 },
                    { 627, 78, 42 },
                    { 628, 10, 43 },
                    { 629, 6, 43 },
                    { 630, 20, 43 },
                    { 631, 31, 43 },
                    { 632, 33, 43 },
                    { 633, 34, 43 },
                    { 634, 70, 43 },
                    { 635, 44, 43 },
                    { 636, 50, 43 },
                    { 637, 58, 43 },
                    { 638, 87, 43 },
                    { 639, 78, 43 },
                    { 640, 10, 44 },
                    { 641, 6, 44 },
                    { 642, 20, 44 },
                    { 643, 31, 44 },
                    { 644, 33, 44 },
                    { 645, 34, 44 },
                    { 646, 70, 44 },
                    { 647, 44, 44 },
                    { 648, 50, 44 },
                    { 649, 58, 44 },
                    { 650, 87, 44 },
                    { 651, 56, 44 },
                    { 652, 78, 44 },
                    { 653, 10, 45 },
                    { 654, 6, 45 },
                    { 655, 20, 45 },
                    { 656, 31, 45 },
                    { 657, 33, 45 },
                    { 658, 34, 45 },
                    { 659, 70, 45 },
                    { 660, 44, 45 },
                    { 661, 50, 45 },
                    { 662, 58, 45 },
                    { 663, 87, 45 },
                    { 664, 56, 45 },
                    { 665, 78, 45 },
                    { 666, 10, 46 },
                    { 667, 28, 46 },
                    { 668, 6, 46 },
                    { 669, 20, 46 },
                    { 670, 31, 46 },
                    { 671, 33, 46 },
                    { 672, 34, 46 },
                    { 673, 70, 46 },
                    { 674, 44, 46 },
                    { 675, 50, 46 },
                    { 676, 58, 46 },
                    { 677, 87, 46 },
                    { 678, 78, 46 },
                    { 679, 10, 47 },
                    { 680, 28, 47 },
                    { 681, 6, 47 },
                    { 682, 20, 47 },
                    { 683, 31, 47 },
                    { 684, 33, 47 },
                    { 685, 34, 47 },
                    { 686, 70, 47 },
                    { 687, 44, 47 },
                    { 688, 50, 47 },
                    { 689, 58, 47 },
                    { 690, 87, 47 },
                    { 691, 78, 47 },
                    { 692, 10, 48 },
                    { 693, 6, 48 },
                    { 694, 20, 48 },
                    { 695, 31, 48 },
                    { 696, 33, 48 },
                    { 697, 34, 48 },
                    { 698, 39, 48 },
                    { 699, 70, 48 },
                    { 700, 46, 48 },
                    { 701, 44, 48 },
                    { 702, 50, 48 },
                    { 703, 58, 48 },
                    { 704, 87, 48 },
                    { 705, 78, 48 },
                    { 706, 4, 49 },
                    { 707, 10, 49 },
                    { 708, 6, 49 },
                    { 709, 20, 49 },
                    { 710, 30, 49 },
                    { 711, 31, 49 },
                    { 712, 33, 49 },
                    { 713, 34, 49 },
                    { 714, 39, 49 },
                    { 715, 70, 49 },
                    { 716, 46, 49 },
                    { 717, 44, 49 },
                    { 718, 50, 49 },
                    { 719, 58, 49 },
                    { 720, 87, 49 },
                    { 721, 51, 49 },
                    { 722, 89, 49 },
                    { 723, 78, 49 },
                    { 724, 10, 50 },
                    { 725, 27, 50 },
                    { 726, 6, 50 },
                    { 727, 20, 50 },
                    { 728, 31, 50 },
                    { 729, 34, 50 },
                    { 730, 44, 50 },
                    { 731, 50, 50 },
                    { 732, 58, 50 },
                    { 733, 87, 50 },
                    { 734, 78, 50 },
                    { 735, 10, 51 },
                    { 736, 27, 51 },
                    { 737, 6, 51 },
                    { 738, 20, 51 },
                    { 739, 31, 51 },
                    { 740, 34, 51 },
                    { 741, 44, 51 },
                    { 742, 50, 51 },
                    { 743, 58, 51 },
                    { 744, 87, 51 },
                    { 745, 78, 51 },
                    { 746, 10, 52 },
                    { 747, 24, 52 },
                    { 748, 25, 52 },
                    { 749, 28, 52 },
                    { 750, 6, 52 },
                    { 751, 20, 52 },
                    { 752, 31, 52 },
                    { 753, 34, 52 },
                    { 754, 39, 52 },
                    { 755, 70, 52 },
                    { 756, 44, 52 },
                    { 757, 50, 52 },
                    { 758, 58, 52 },
                    { 759, 87, 52 },
                    { 760, 89, 52 },
                    { 761, 66, 52 },
                    { 762, 10, 53 },
                    { 763, 24, 53 },
                    { 764, 25, 53 },
                    { 765, 28, 53 },
                    { 766, 6, 53 },
                    { 767, 20, 53 },
                    { 768, 31, 53 },
                    { 769, 34, 53 },
                    { 770, 39, 53 },
                    { 771, 70, 53 },
                    { 772, 44, 53 },
                    { 773, 50, 53 },
                    { 774, 58, 53 },
                    { 775, 87, 53 },
                    { 776, 89, 53 },
                    { 777, 66, 53 },
                    { 778, 63, 53 },
                    { 779, 10, 54 },
                    { 780, 14, 54 },
                    { 781, 17, 54 },
                    { 782, 18, 54 },
                    { 783, 28, 54 },
                    { 784, 6, 54 },
                    { 785, 20, 54 },
                    { 786, 31, 54 },
                    { 787, 34, 54 },
                    { 788, 35, 54 },
                    { 789, 39, 54 },
                    { 790, 70, 54 },
                    { 791, 44, 54 },
                    { 792, 50, 54 },
                    { 793, 58, 54 },
                    { 794, 87, 54 },
                    { 795, 55, 54 },
                    { 796, 56, 54 },
                    { 797, 78, 54 },
                    { 798, 10, 55 },
                    { 799, 14, 55 },
                    { 800, 17, 55 },
                    { 801, 18, 55 },
                    { 802, 28, 55 },
                    { 803, 6, 55 },
                    { 804, 29, 55 },
                    { 805, 20, 55 },
                    { 806, 31, 55 },
                    { 807, 34, 55 },
                    { 808, 35, 55 },
                    { 809, 39, 55 },
                    { 810, 70, 55 },
                    { 811, 44, 55 },
                    { 812, 50, 55 },
                    { 813, 58, 55 },
                    { 814, 87, 55 },
                    { 815, 55, 55 },
                    { 816, 56, 55 },
                    { 817, 78, 55 },
                    { 818, 10, 56 },
                    { 819, 17, 56 },
                    { 820, 18, 56 },
                    { 821, 24, 56 },
                    { 822, 25, 56 },
                    { 823, 26, 56 },
                    { 824, 28, 56 },
                    { 825, 6, 56 },
                    { 826, 20, 56 },
                    { 827, 31, 56 },
                    { 828, 34, 56 },
                    { 829, 35, 56 },
                    { 830, 39, 56 },
                    { 831, 44, 56 },
                    { 832, 50, 56 },
                    { 833, 58, 56 },
                    { 834, 87, 56 },
                    { 835, 89, 56 },
                    { 836, 66, 56 },
                    { 837, 56, 56 },
                    { 838, 78, 56 },
                    { 839, 10, 57 },
                    { 840, 17, 57 },
                    { 841, 18, 57 },
                    { 842, 24, 57 },
                    { 843, 25, 57 },
                    { 844, 26, 57 },
                    { 845, 28, 57 },
                    { 846, 6, 57 },
                    { 847, 20, 57 },
                    { 848, 31, 57 },
                    { 849, 34, 57 },
                    { 850, 35, 57 },
                    { 851, 39, 57 },
                    { 852, 44, 57 },
                    { 853, 50, 57 },
                    { 854, 58, 57 },
                    { 855, 87, 57 },
                    { 856, 89, 57 },
                    { 857, 66, 57 },
                    { 858, 78, 57 },
                    { 859, 10, 58 },
                    { 860, 28, 58 },
                    { 861, 6, 58 },
                    { 862, 20, 58 },
                    { 863, 31, 58 },
                    { 864, 33, 58 },
                    { 865, 34, 58 },
                    { 866, 39, 58 },
                    { 867, 44, 58 },
                    { 868, 50, 58 },
                    { 869, 58, 58 },
                    { 870, 87, 58 },
                    { 871, 61, 58 },
                    { 872, 78, 58 },
                    { 873, 10, 59 },
                    { 874, 28, 59 },
                    { 875, 6, 59 },
                    { 876, 20, 59 },
                    { 877, 30, 59 },
                    { 878, 31, 59 },
                    { 879, 33, 59 },
                    { 880, 34, 59 },
                    { 881, 39, 59 },
                    { 882, 44, 59 },
                    { 883, 50, 59 },
                    { 884, 58, 59 },
                    { 885, 87, 59 },
                    { 886, 61, 59 },
                    { 887, 78, 59 },
                    { 888, 10, 60 },
                    { 889, 14, 60 },
                    { 890, 28, 60 },
                    { 891, 6, 60 },
                    { 892, 29, 60 },
                    { 893, 20, 60 },
                    { 894, 31, 60 },
                    { 895, 34, 60 },
                    { 896, 39, 60 },
                    { 897, 46, 60 },
                    { 898, 44, 60 },
                    { 899, 50, 60 },
                    { 900, 58, 60 },
                    { 901, 87, 60 },
                    { 902, 78, 60 },
                    { 903, 10, 61 },
                    { 904, 14, 61 },
                    { 905, 17, 61 },
                    { 906, 18, 61 },
                    { 907, 26, 61 },
                    { 908, 27, 61 },
                    { 909, 28, 61 },
                    { 910, 6, 61 },
                    { 911, 29, 61 }
                });

            migrationBuilder.InsertData(
                table: "PokemonLearnableMoves",
                columns: new[] { "Id", "MoveId", "PokemonId" },
                values: new object[,]
                {
                    { 912, 20, 61 },
                    { 913, 31, 61 },
                    { 914, 34, 61 },
                    { 915, 35, 61 },
                    { 916, 39, 61 },
                    { 917, 46, 61 },
                    { 918, 44, 61 },
                    { 919, 50, 61 },
                    { 920, 58, 61 },
                    { 921, 87, 61 },
                    { 922, 56, 61 },
                    { 923, 78, 61 },
                    { 924, 10, 62 },
                    { 925, 14, 62 },
                    { 926, 17, 62 },
                    { 927, 18, 62 },
                    { 928, 26, 62 },
                    { 929, 27, 62 },
                    { 930, 28, 62 },
                    { 931, 6, 62 },
                    { 932, 29, 62 },
                    { 933, 20, 62 },
                    { 934, 31, 62 },
                    { 935, 34, 62 },
                    { 936, 35, 62 },
                    { 937, 39, 62 },
                    { 938, 46, 62 },
                    { 939, 44, 62 },
                    { 940, 50, 62 },
                    { 941, 58, 62 },
                    { 942, 87, 62 },
                    { 943, 66, 62 },
                    { 944, 56, 62 },
                    { 945, 78, 62 },
                    { 946, 10, 63 },
                    { 947, 17, 63 },
                    { 948, 18, 63 },
                    { 949, 6, 63 },
                    { 950, 29, 63 },
                    { 951, 20, 63 },
                    { 952, 31, 63 },
                    { 953, 33, 63 },
                    { 954, 34, 63 },
                    { 955, 35, 63 },
                    { 956, 39, 63 },
                    { 957, 70, 63 },
                    { 958, 46, 63 },
                    { 959, 44, 63 },
                    { 960, 50, 63 },
                    { 961, 58, 63 },
                    { 962, 87, 63 },
                    { 963, 67, 63 },
                    { 964, 63, 63 },
                    { 965, 56, 63 },
                    { 966, 78, 63 },
                    { 967, 10, 64 },
                    { 968, 17, 64 },
                    { 969, 18, 64 },
                    { 970, 28, 64 },
                    { 971, 6, 64 },
                    { 972, 20, 64 },
                    { 973, 31, 64 },
                    { 974, 34, 64 },
                    { 975, 35, 64 },
                    { 976, 39, 64 },
                    { 977, 70, 64 },
                    { 978, 46, 64 },
                    { 979, 44, 64 },
                    { 980, 50, 64 },
                    { 981, 58, 64 },
                    { 982, 87, 64 },
                    { 983, 67, 64 },
                    { 984, 63, 64 },
                    { 985, 56, 64 },
                    { 986, 78, 64 },
                    { 987, 10, 65 },
                    { 988, 17, 65 },
                    { 989, 18, 65 },
                    { 990, 28, 65 },
                    { 991, 6, 65 },
                    { 992, 20, 65 },
                    { 993, 31, 65 },
                    { 994, 34, 65 },
                    { 995, 35, 65 },
                    { 996, 39, 65 },
                    { 997, 70, 65 },
                    { 998, 46, 65 },
                    { 999, 44, 65 },
                    { 1000, 50, 65 },
                    { 1001, 58, 65 },
                    { 1002, 87, 65 },
                    { 1003, 67, 65 },
                    { 1004, 63, 65 },
                    { 1005, 56, 65 },
                    { 1006, 78, 65 },
                    { 1007, 10, 66 },
                    { 1008, 18, 66 },
                    { 1009, 26, 66 },
                    { 1010, 27, 66 },
                    { 1011, 28, 66 },
                    { 1012, 6, 66 },
                    { 1013, 20, 66 },
                    { 1014, 31, 66 },
                    { 1015, 34, 66 },
                    { 1016, 35, 66 },
                    { 1017, 44, 66 },
                    { 1018, 50, 66 },
                    { 1019, 58, 66 },
                    { 1020, 87, 66 },
                    { 1021, 66, 66 },
                    { 1022, 56, 66 },
                    { 1023, 78, 66 },
                    { 1024, 10, 67 },
                    { 1025, 18, 67 },
                    { 1026, 26, 67 },
                    { 1027, 27, 67 },
                    { 1028, 28, 67 },
                    { 1029, 6, 67 },
                    { 1030, 20, 67 },
                    { 1031, 31, 67 },
                    { 1032, 34, 67 },
                    { 1033, 35, 67 },
                    { 1034, 44, 67 },
                    { 1035, 50, 67 },
                    { 1036, 58, 67 },
                    { 1037, 87, 67 },
                    { 1038, 66, 67 },
                    { 1039, 56, 67 },
                    { 1040, 78, 67 },
                    { 1041, 10, 68 },
                    { 1042, 18, 68 },
                    { 1043, 26, 68 },
                    { 1044, 27, 68 },
                    { 1045, 28, 68 },
                    { 1046, 6, 68 },
                    { 1047, 20, 68 },
                    { 1048, 31, 68 },
                    { 1049, 34, 68 },
                    { 1050, 35, 68 },
                    { 1051, 44, 68 },
                    { 1052, 50, 68 },
                    { 1053, 58, 68 },
                    { 1054, 87, 68 },
                    { 1055, 66, 68 },
                    { 1056, 56, 68 },
                    { 1057, 78, 68 },
                    { 1058, 10, 69 },
                    { 1059, 6, 69 },
                    { 1060, 20, 69 },
                    { 1061, 31, 69 },
                    { 1062, 33, 69 },
                    { 1063, 34, 69 },
                    { 1064, 70, 69 },
                    { 1065, 44, 69 },
                    { 1066, 50, 69 },
                    { 1067, 58, 69 },
                    { 1068, 87, 69 },
                    { 1069, 78, 69 },
                    { 1070, 10, 70 },
                    { 1071, 6, 70 },
                    { 1072, 20, 70 },
                    { 1073, 31, 70 },
                    { 1074, 33, 70 },
                    { 1075, 34, 70 },
                    { 1076, 39, 70 },
                    { 1077, 70, 70 },
                    { 1078, 44, 70 },
                    { 1079, 50, 70 },
                    { 1080, 58, 70 },
                    { 1081, 87, 70 },
                    { 1082, 78, 70 },
                    { 1083, 10, 71 },
                    { 1084, 6, 71 },
                    { 1085, 20, 71 },
                    { 1086, 31, 71 },
                    { 1087, 33, 71 },
                    { 1088, 34, 71 },
                    { 1089, 39, 71 },
                    { 1090, 70, 71 },
                    { 1091, 44, 71 },
                    { 1092, 50, 71 },
                    { 1093, 58, 71 },
                    { 1094, 87, 71 },
                    { 1095, 78, 71 },
                    { 1096, 10, 72 },
                    { 1097, 14, 72 },
                    { 1098, 6, 72 },
                    { 1099, 20, 72 },
                    { 1100, 31, 72 },
                    { 1101, 33, 72 },
                    { 1102, 34, 72 },
                    { 1103, 44, 72 },
                    { 1104, 50, 72 },
                    { 1105, 58, 72 },
                    { 1106, 87, 72 },
                    { 1107, 55, 72 },
                    { 1108, 66, 72 },
                    { 1109, 78, 72 },
                    { 1110, 10, 73 },
                    { 1111, 14, 73 },
                    { 1112, 6, 73 },
                    { 1113, 20, 73 },
                    { 1114, 31, 73 },
                    { 1115, 33, 73 },
                    { 1116, 34, 73 },
                    { 1117, 44, 73 },
                    { 1118, 50, 73 },
                    { 1119, 58, 73 },
                    { 1120, 87, 73 },
                    { 1121, 55, 73 },
                    { 1122, 66, 73 },
                    { 1123, 78, 73 },
                    { 1124, 10, 74 },
                    { 1125, 17, 74 },
                    { 1126, 18, 74 },
                    { 1127, 27, 74 },
                    { 1128, 28, 74 },
                    { 1129, 6, 74 },
                    { 1130, 20, 74 },
                    { 1131, 31, 74 },
                    { 1132, 34, 74 },
                    { 1133, 35, 74 },
                    { 1134, 44, 74 },
                    { 1135, 50, 74 },
                    { 1136, 58, 74 },
                    { 1137, 87, 74 },
                    { 1138, 56, 74 },
                    { 1139, 78, 74 },
                    { 1140, 10, 75 },
                    { 1141, 17, 75 },
                    { 1142, 18, 75 },
                    { 1143, 27, 75 },
                    { 1144, 28, 75 },
                    { 1145, 6, 75 },
                    { 1146, 20, 75 },
                    { 1147, 31, 75 },
                    { 1148, 34, 75 },
                    { 1149, 35, 75 },
                    { 1150, 44, 75 },
                    { 1151, 50, 75 },
                    { 1152, 58, 75 },
                    { 1153, 87, 75 },
                    { 1154, 56, 75 },
                    { 1155, 78, 75 },
                    { 1156, 10, 76 },
                    { 1157, 17, 76 },
                    { 1158, 18, 76 },
                    { 1159, 27, 76 },
                    { 1160, 28, 76 },
                    { 1161, 6, 76 },
                    { 1162, 20, 76 },
                    { 1163, 31, 76 },
                    { 1164, 34, 76 },
                    { 1165, 35, 76 },
                    { 1166, 44, 76 },
                    { 1167, 50, 76 },
                    { 1168, 58, 76 },
                    { 1169, 87, 76 },
                    { 1170, 56, 76 },
                    { 1171, 78, 76 },
                    { 1172, 10, 77 },
                    { 1173, 6, 77 },
                    { 1174, 20, 77 },
                    { 1175, 31, 77 },
                    { 1176, 33, 77 },
                    { 1177, 34, 77 },
                    { 1178, 39, 77 },
                    { 1179, 44, 77 },
                    { 1180, 50, 77 },
                    { 1181, 58, 77 },
                    { 1182, 87, 77 },
                    { 1183, 61, 77 },
                    { 1184, 78, 77 },
                    { 1185, 10, 78 },
                    { 1186, 6, 78 },
                    { 1187, 20, 78 },
                    { 1188, 31, 78 },
                    { 1189, 33, 78 },
                    { 1190, 34, 78 },
                    { 1191, 39, 78 },
                    { 1192, 44, 78 },
                    { 1193, 50, 78 },
                    { 1194, 58, 78 },
                    { 1195, 87, 78 },
                    { 1196, 61, 78 },
                    { 1197, 78, 78 },
                    { 1198, 10, 79 },
                    { 1199, 14, 79 },
                    { 1200, 26, 79 },
                    { 1201, 27, 79 },
                    { 1202, 28, 79 },
                    { 1203, 6, 79 },
                    { 1204, 20, 79 },
                    { 1205, 30, 79 },
                    { 1206, 31, 79 },
                    { 1207, 33, 79 },
                    { 1208, 34, 79 },
                    { 1209, 39, 79 },
                    { 1210, 70, 79 },
                    { 1211, 46, 79 },
                    { 1212, 44, 79 },
                    { 1213, 50, 79 },
                    { 1214, 58, 79 },
                    { 1215, 87, 79 },
                    { 1216, 67, 79 },
                    { 1217, 55, 79 },
                    { 1218, 72, 79 },
                    { 1219, 78, 79 },
                    { 1220, 10, 80 },
                    { 1221, 14, 80 },
                    { 1222, 17, 80 },
                    { 1223, 18, 80 },
                    { 1224, 26, 80 },
                    { 1225, 27, 80 },
                    { 1226, 28, 80 },
                    { 1227, 6, 80 },
                    { 1228, 20, 80 },
                    { 1229, 30, 80 },
                    { 1230, 31, 80 },
                    { 1231, 33, 80 },
                    { 1232, 34, 80 },
                    { 1233, 35, 80 },
                    { 1234, 39, 80 },
                    { 1235, 70, 80 },
                    { 1236, 46, 80 },
                    { 1237, 44, 80 },
                    { 1238, 50, 80 },
                    { 1239, 58, 80 },
                    { 1240, 87, 80 },
                    { 1241, 67, 80 },
                    { 1242, 55, 80 },
                    { 1243, 56, 80 },
                    { 1244, 72, 80 },
                    { 1245, 78, 80 },
                    { 1246, 10, 81 },
                    { 1247, 24, 81 },
                    { 1248, 25, 81 },
                    { 1249, 6, 81 },
                    { 1250, 20, 81 },
                    { 1251, 30, 81 },
                    { 1252, 31, 81 },
                    { 1253, 33, 81 },
                    { 1254, 34, 81 },
                    { 1255, 70, 81 },
                    { 1256, 47, 81 },
                    { 1257, 44, 81 },
                    { 1258, 50, 81 },
                    { 1259, 58, 81 },
                    { 1260, 87, 81 },
                    { 1261, 67, 81 },
                    { 1262, 10, 82 },
                    { 1263, 24, 82 },
                    { 1264, 25, 82 },
                    { 1265, 6, 82 },
                    { 1266, 20, 82 },
                    { 1267, 30, 82 },
                    { 1268, 31, 82 },
                    { 1269, 33, 82 },
                    { 1270, 34, 82 },
                    { 1271, 70, 82 },
                    { 1272, 47, 82 },
                    { 1273, 44, 82 },
                    { 1274, 50, 82 },
                    { 1275, 58, 82 },
                    { 1276, 87, 82 },
                    { 1277, 67, 82 },
                    { 1278, 4, 83 },
                    { 1279, 10, 83 },
                    { 1280, 6, 83 },
                    { 1281, 20, 83 },
                    { 1282, 31, 83 },
                    { 1283, 33, 83 },
                    { 1284, 34, 83 },
                    { 1285, 39, 83 },
                    { 1286, 44, 83 },
                    { 1287, 50, 83 },
                    { 1288, 58, 83 },
                    { 1289, 87, 83 },
                    { 1290, 51, 83 },
                    { 1291, 88, 83 },
                    { 1292, 89, 83 },
                    { 1293, 78, 83 },
                    { 1294, 4, 84 },
                    { 1295, 10, 84 },
                    { 1296, 6, 84 },
                    { 1297, 31, 84 },
                    { 1298, 33, 84 },
                    { 1299, 34, 84 },
                    { 1300, 39, 84 },
                    { 1301, 44, 84 },
                    { 1302, 50, 84 },
                    { 1303, 58, 84 },
                    { 1304, 87, 84 },
                    { 1305, 51, 84 },
                    { 1306, 88, 84 },
                    { 1307, 78, 84 },
                    { 1308, 4, 85 },
                    { 1309, 10, 85 },
                    { 1310, 6, 85 },
                    { 1311, 31, 85 },
                    { 1312, 33, 85 },
                    { 1313, 34, 85 },
                    { 1314, 39, 85 },
                    { 1315, 44, 85 },
                    { 1316, 50, 85 },
                    { 1317, 58, 85 },
                    { 1318, 87, 85 },
                    { 1319, 51, 85 },
                    { 1320, 66, 85 },
                    { 1321, 78, 85 },
                    { 1322, 10, 86 },
                    { 1323, 14, 86 },
                    { 1324, 6, 86 },
                    { 1325, 20, 86 },
                    { 1326, 31, 86 },
                    { 1327, 34, 86 },
                    { 1328, 50, 86 },
                    { 1329, 58, 86 },
                    { 1330, 87, 86 },
                    { 1331, 56, 86 },
                    { 1332, 78, 86 },
                    { 1333, 10, 87 },
                    { 1334, 14, 87 },
                    { 1335, 6, 87 },
                    { 1336, 20, 87 },
                    { 1337, 31, 87 },
                    { 1338, 34, 87 },
                    { 1339, 50, 87 },
                    { 1340, 58, 87 },
                    { 1341, 87, 87 },
                    { 1342, 56, 87 },
                    { 1343, 72, 87 },
                    { 1344, 78, 87 },
                    { 1345, 24, 88 },
                    { 1346, 25, 88 },
                    { 1347, 28, 88 },
                    { 1348, 6, 88 },
                    { 1349, 20, 88 },
                    { 1350, 31, 88 },
                    { 1351, 34, 88 },
                    { 1352, 35, 88 },
                    { 1353, 36, 88 },
                    { 1354, 47, 88 },
                    { 1355, 44, 88 },
                    { 1356, 50, 88 },
                    { 1357, 58, 88 },
                    { 1358, 87, 88 },
                    { 1359, 66, 88 },
                    { 1360, 78, 88 },
                    { 1361, 24, 89 },
                    { 1362, 25, 89 },
                    { 1363, 28, 89 },
                    { 1364, 6, 89 },
                    { 1365, 20, 89 },
                    { 1366, 31, 89 },
                    { 1367, 34, 89 },
                    { 1368, 35, 89 },
                    { 1369, 36, 89 },
                    { 1370, 39, 89 },
                    { 1371, 47, 89 },
                    { 1372, 44, 89 },
                    { 1373, 50, 89 },
                    { 1374, 58, 89 },
                    { 1375, 87, 89 },
                    { 1376, 66, 89 },
                    { 1377, 78, 89 },
                    { 1378, 10, 90 },
                    { 1379, 14, 90 },
                    { 1380, 6, 90 },
                    { 1381, 20, 90 },
                    { 1382, 30, 90 },
                    { 1383, 31, 90 },
                    { 1384, 33, 90 },
                    { 1385, 34, 90 },
                    { 1386, 36, 90 },
                    { 1387, 39, 90 },
                    { 1388, 47, 90 },
                    { 1389, 44, 90 },
                    { 1390, 50, 90 },
                    { 1391, 58, 90 },
                    { 1392, 87, 90 },
                    { 1393, 66, 90 },
                    { 1394, 78, 90 },
                    { 1395, 10, 91 },
                    { 1396, 14, 91 },
                    { 1397, 6, 91 },
                    { 1398, 20, 91 },
                    { 1399, 30, 91 },
                    { 1400, 31, 91 },
                    { 1401, 33, 91 },
                    { 1402, 34, 91 },
                    { 1403, 36, 91 },
                    { 1404, 39, 91 },
                    { 1405, 47, 91 },
                    { 1406, 44, 91 },
                    { 1407, 50, 91 },
                    { 1408, 58, 91 },
                    { 1409, 87, 91 },
                    { 1410, 55, 91 },
                    { 1411, 66, 91 },
                    { 1412, 72, 91 },
                    { 1413, 78, 91 },
                    { 1414, 24, 92 },
                    { 1415, 25, 92 },
                    { 1416, 6, 92 },
                    { 1417, 29, 92 },
                    { 1418, 20, 92 },
                    { 1419, 31, 92 },
                    { 1420, 34, 92 },
                    { 1421, 36, 92 },
                    { 1422, 46, 92 },
                    { 1423, 47, 92 },
                    { 1424, 44, 92 },
                    { 1425, 50, 92 },
                    { 1426, 58, 92 },
                    { 1427, 87, 92 },
                    { 1428, 63, 92 },
                    { 1429, 78, 92 },
                    { 1430, 24, 93 },
                    { 1431, 25, 93 },
                    { 1432, 6, 93 },
                    { 1433, 29, 93 },
                    { 1434, 20, 93 },
                    { 1435, 31, 93 },
                    { 1436, 34, 93 },
                    { 1437, 35, 93 },
                    { 1438, 36, 93 },
                    { 1439, 46, 93 },
                    { 1440, 47, 93 },
                    { 1441, 44, 93 },
                    { 1442, 50, 93 },
                    { 1443, 58, 93 },
                    { 1444, 87, 93 },
                    { 1445, 61, 93 },
                    { 1446, 63, 93 },
                    { 1447, 56, 93 },
                    { 1448, 78, 93 },
                    { 1449, 10, 94 },
                    { 1450, 17, 94 },
                    { 1451, 18, 94 },
                    { 1452, 24, 94 },
                    { 1453, 25, 94 },
                    { 1454, 6, 94 },
                    { 1455, 29, 94 },
                    { 1456, 20, 94 },
                    { 1457, 31, 94 },
                    { 1458, 34, 94 },
                    { 1459, 35, 94 },
                    { 1460, 36, 94 },
                    { 1461, 46, 94 },
                    { 1462, 47, 94 },
                    { 1463, 44, 94 },
                    { 1464, 50, 94 },
                    { 1465, 58, 94 },
                    { 1466, 87, 94 },
                    { 1467, 61, 94 },
                    { 1468, 63, 94 },
                    { 1469, 56, 94 },
                    { 1470, 78, 94 },
                    { 1471, 10, 95 },
                    { 1472, 26, 95 },
                    { 1473, 27, 95 },
                    { 1474, 28, 95 },
                    { 1475, 6, 95 },
                    { 1476, 31, 95 },
                    { 1477, 34, 95 },
                    { 1478, 36, 95 },
                    { 1479, 47, 95 },
                    { 1480, 44, 95 },
                    { 1481, 50, 95 },
                    { 1482, 58, 95 },
                    { 1483, 87, 95 },
                    { 1484, 66, 95 },
                    { 1485, 78, 95 },
                    { 1486, 10, 96 },
                    { 1487, 17, 96 },
                    { 1488, 18, 96 },
                    { 1489, 6, 96 },
                    { 1490, 20, 96 },
                    { 1491, 30, 96 },
                    { 1492, 31, 96 },
                    { 1493, 33, 96 },
                    { 1494, 34, 96 },
                    { 1495, 35, 96 },
                    { 1496, 39, 96 },
                    { 1497, 70, 96 },
                    { 1498, 46, 96 },
                    { 1499, 44, 96 },
                    { 1500, 50, 96 },
                    { 1501, 58, 96 },
                    { 1502, 87, 96 },
                    { 1503, 67, 96 },
                    { 1504, 56, 96 },
                    { 1505, 78, 96 },
                    { 1506, 10, 97 },
                    { 1507, 17, 97 },
                    { 1508, 18, 97 },
                    { 1509, 6, 97 },
                    { 1510, 20, 97 },
                    { 1511, 30, 97 },
                    { 1512, 31, 97 },
                    { 1513, 33, 97 },
                    { 1514, 34, 97 },
                    { 1515, 35, 97 },
                    { 1516, 39, 97 },
                    { 1517, 70, 97 },
                    { 1518, 46, 97 },
                    { 1519, 44, 97 },
                    { 1520, 50, 97 },
                    { 1521, 58, 97 },
                    { 1522, 87, 97 },
                    { 1523, 67, 97 },
                    { 1524, 56, 97 },
                    { 1525, 78, 97 },
                    { 1526, 10, 98 },
                    { 1527, 14, 98 },
                    { 1528, 6, 98 },
                    { 1529, 20, 98 },
                    { 1530, 31, 98 },
                    { 1531, 34, 98 },
                    { 1532, 44, 98 },
                    { 1533, 50, 98 },
                    { 1534, 58, 98 },
                    { 1535, 87, 98 },
                    { 1536, 56, 98 },
                    { 1537, 81, 98 },
                    { 1538, 78, 98 },
                    { 1539, 10, 99 },
                    { 1540, 14, 99 },
                    { 1541, 28, 99 },
                    { 1542, 6, 99 },
                    { 1543, 20, 99 },
                    { 1544, 31, 99 },
                    { 1545, 34, 99 },
                    { 1546, 44, 99 },
                    { 1547, 50, 99 },
                    { 1548, 58, 99 },
                    { 1549, 87, 99 },
                    { 1550, 56, 99 },
                    { 1551, 81, 99 },
                    { 1552, 78, 99 },
                    { 1553, 24, 100 },
                    { 1554, 25, 100 },
                    { 1555, 6, 100 },
                    { 1556, 20, 100 },
                    { 1557, 30, 100 },
                    { 1558, 31, 100 },
                    { 1559, 33, 100 },
                    { 1560, 34, 100 },
                    { 1561, 70, 100 },
                    { 1562, 44, 100 },
                    { 1563, 50, 100 },
                    { 1564, 58, 100 },
                    { 1565, 87, 100 },
                    { 1566, 24, 101 },
                    { 1567, 25, 101 },
                    { 1568, 6, 101 },
                    { 1569, 20, 101 },
                    { 1570, 30, 101 },
                    { 1571, 31, 101 },
                    { 1572, 33, 101 },
                    { 1573, 34, 101 },
                    { 1574, 70, 101 },
                    { 1575, 44, 101 },
                    { 1576, 50, 101 },
                    { 1577, 58, 101 },
                    { 1578, 87, 101 },
                    { 1579, 10, 102 },
                    { 1580, 6, 102 },
                    { 1581, 29, 102 },
                    { 1582, 20, 102 },
                    { 1583, 30, 102 },
                    { 1584, 31, 102 },
                    { 1585, 34, 102 },
                    { 1586, 36, 102 },
                    { 1587, 70, 102 },
                    { 1588, 46, 102 },
                    { 1589, 47, 102 },
                    { 1590, 44, 102 },
                    { 1591, 50, 102 },
                    { 1592, 58, 102 },
                    { 1593, 87, 102 },
                    { 1594, 78, 102 },
                    { 1595, 10, 103 },
                    { 1596, 6, 103 },
                    { 1597, 29, 103 },
                    { 1598, 20, 103 },
                    { 1599, 30, 103 },
                    { 1600, 31, 103 },
                    { 1601, 33, 103 },
                    { 1602, 34, 103 },
                    { 1603, 36, 103 },
                    { 1604, 70, 103 },
                    { 1605, 46, 103 },
                    { 1606, 47, 103 },
                    { 1607, 44, 103 },
                    { 1608, 50, 103 },
                    { 1609, 58, 103 },
                    { 1610, 87, 103 },
                    { 1611, 78, 103 },
                    { 1612, 10, 104 },
                    { 1613, 14, 104 },
                    { 1614, 17, 104 },
                    { 1615, 18, 104 },
                    { 1616, 26, 104 },
                    { 1617, 27, 104 },
                    { 1618, 28, 104 },
                    { 1619, 6, 104 },
                    { 1620, 31, 104 },
                    { 1621, 34, 104 },
                    { 1622, 39, 104 },
                    { 1623, 44, 104 },
                    { 1624, 50, 104 },
                    { 1625, 58, 104 },
                    { 1626, 87, 104 },
                    { 1627, 78, 104 },
                    { 1628, 10, 105 },
                    { 1629, 14, 105 },
                    { 1630, 17, 105 },
                    { 1631, 18, 105 },
                    { 1632, 26, 105 },
                    { 1633, 27, 105 },
                    { 1634, 28, 105 },
                    { 1635, 6, 105 },
                    { 1636, 31, 105 },
                    { 1637, 34, 105 },
                    { 1638, 39, 105 },
                    { 1639, 44, 105 },
                    { 1640, 50, 105 },
                    { 1641, 58, 105 },
                    { 1642, 87, 105 },
                    { 1643, 78, 105 },
                    { 1644, 10, 106 },
                    { 1645, 17, 106 },
                    { 1646, 18, 106 },
                    { 1647, 26, 106 },
                    { 1648, 6, 106 },
                    { 1649, 20, 106 },
                    { 1650, 31, 106 },
                    { 1651, 34, 106 },
                    { 1652, 35, 106 },
                    { 1653, 39, 106 },
                    { 1654, 44, 106 },
                    { 1655, 50, 106 },
                    { 1656, 87, 106 },
                    { 1657, 56, 106 },
                    { 1658, 78, 106 },
                    { 1659, 10, 107 },
                    { 1660, 17, 107 },
                    { 1661, 26, 107 },
                    { 1662, 6, 107 },
                    { 1663, 20, 107 },
                    { 1664, 31, 107 },
                    { 1665, 34, 107 },
                    { 1666, 35, 107 },
                    { 1667, 39, 107 },
                    { 1668, 44, 107 },
                    { 1669, 50, 107 },
                    { 1670, 58, 107 },
                    { 1671, 87, 107 },
                    { 1672, 56, 107 },
                    { 1673, 78, 107 },
                    { 1674, 10, 108 },
                    { 1675, 14, 108 },
                    { 1676, 17, 108 },
                    { 1677, 18, 108 },
                    { 1678, 24, 108 },
                    { 1679, 25, 108 },
                    { 1680, 26, 108 },
                    { 1681, 27, 108 },
                    { 1682, 28, 108 },
                    { 1683, 6, 108 },
                    { 1684, 20, 108 },
                    { 1685, 31, 108 },
                    { 1686, 34, 108 },
                    { 1687, 44, 108 },
                    { 1688, 50, 108 },
                    { 1689, 58, 108 },
                    { 1690, 87, 108 },
                    { 1691, 56, 108 },
                    { 1692, 78, 108 },
                    { 1693, 24, 109 },
                    { 1694, 25, 109 },
                    { 1695, 6, 109 },
                    { 1696, 20, 109 },
                    { 1697, 31, 109 },
                    { 1698, 34, 109 },
                    { 1699, 70, 109 },
                    { 1700, 44, 109 },
                    { 1701, 50, 109 },
                    { 1702, 58, 109 },
                    { 1703, 87, 109 },
                    { 1704, 66, 109 },
                    { 1705, 78, 109 },
                    { 1706, 24, 110 },
                    { 1707, 25, 110 },
                    { 1708, 6, 110 },
                    { 1709, 20, 110 },
                    { 1710, 31, 110 },
                    { 1711, 34, 110 },
                    { 1712, 70, 110 },
                    { 1713, 44, 110 },
                    { 1714, 50, 110 },
                    { 1715, 58, 110 },
                    { 1716, 87, 110 },
                    { 1717, 61, 110 },
                    { 1718, 66, 110 },
                    { 1719, 78, 110 },
                    { 1720, 10, 111 },
                    { 1721, 14, 111 },
                    { 1722, 24, 111 },
                    { 1723, 25, 111 },
                    { 1724, 26, 111 },
                    { 1725, 27, 111 },
                    { 1726, 28, 111 },
                    { 1727, 6, 111 },
                    { 1728, 20, 111 },
                    { 1729, 31, 111 },
                    { 1730, 34, 111 },
                    { 1731, 44, 111 },
                    { 1732, 50, 111 },
                    { 1733, 58, 111 },
                    { 1734, 87, 111 },
                    { 1735, 66, 111 },
                    { 1736, 78, 111 },
                    { 1737, 10, 112 },
                    { 1738, 14, 112 },
                    { 1739, 17, 112 },
                    { 1740, 18, 112 },
                    { 1741, 24, 112 },
                    { 1742, 25, 112 },
                    { 1743, 26, 112 },
                    { 1744, 27, 112 },
                    { 1745, 28, 112 },
                    { 1746, 6, 112 },
                    { 1747, 20, 112 },
                    { 1748, 31, 112 },
                    { 1749, 34, 112 },
                    { 1750, 44, 112 },
                    { 1751, 50, 112 },
                    { 1752, 58, 112 },
                    { 1753, 87, 112 },
                    { 1754, 66, 112 },
                    { 1755, 56, 112 },
                    { 1756, 72, 112 },
                    { 1757, 78, 112 },
                    { 1758, 14, 113 },
                    { 1759, 17, 113 },
                    { 1760, 18, 113 },
                    { 1761, 24, 113 },
                    { 1762, 25, 113 },
                    { 1763, 26, 113 },
                    { 1764, 6, 113 },
                    { 1765, 29, 113 },
                    { 1766, 20, 113 },
                    { 1767, 30, 113 },
                    { 1768, 31, 113 },
                    { 1769, 33, 113 },
                    { 1770, 34, 113 },
                    { 1771, 35, 113 },
                    { 1772, 39, 113 },
                    { 1773, 41, 113 },
                    { 1774, 70, 113 },
                    { 1775, 46, 113 },
                    { 1776, 44, 113 },
                    { 1777, 50, 113 },
                    { 1778, 58, 113 },
                    { 1779, 87, 113 },
                    { 1780, 67, 113 },
                    { 1781, 78, 113 },
                    { 1782, 10, 114 },
                    { 1783, 14, 114 },
                    { 1784, 17, 114 },
                    { 1785, 18, 114 },
                    { 1786, 26, 114 },
                    { 1787, 6, 114 },
                    { 1788, 20, 114 },
                    { 1789, 31, 114 },
                    { 1790, 34, 114 },
                    { 1791, 70, 114 },
                    { 1792, 44, 114 },
                    { 1793, 50, 114 },
                    { 1794, 58, 114 },
                    { 1795, 87, 114 },
                    { 1796, 78, 114 },
                    { 1797, 10, 115 },
                    { 1798, 14, 115 },
                    { 1799, 17, 115 },
                    { 1800, 18, 115 },
                    { 1801, 28, 115 },
                    { 1802, 6, 115 },
                    { 1803, 31, 115 },
                    { 1804, 34, 115 },
                    { 1805, 44, 115 },
                    { 1806, 50, 115 },
                    { 1807, 87, 115 },
                    { 1808, 56, 115 },
                    { 1809, 72, 115 },
                    { 1810, 78, 115 },
                    { 1811, 10, 116 },
                    { 1812, 14, 116 },
                    { 1813, 6, 116 },
                    { 1814, 20, 116 },
                    { 1815, 31, 116 },
                    { 1816, 34, 116 },
                    { 1817, 39, 116 },
                    { 1818, 44, 116 },
                    { 1819, 50, 116 },
                    { 1820, 58, 116 },
                    { 1821, 87, 116 },
                    { 1822, 78, 116 },
                    { 1823, 10, 117 },
                    { 1824, 14, 117 },
                    { 1825, 6, 117 },
                    { 1826, 20, 117 },
                    { 1827, 31, 117 },
                    { 1828, 34, 117 },
                    { 1829, 39, 117 },
                    { 1830, 44, 117 },
                    { 1831, 50, 117 },
                    { 1832, 58, 117 },
                    { 1833, 87, 117 },
                    { 1834, 78, 117 },
                    { 1835, 10, 118 },
                    { 1836, 14, 118 },
                    { 1837, 6, 118 },
                    { 1838, 20, 118 },
                    { 1839, 31, 118 },
                    { 1840, 34, 118 },
                    { 1841, 39, 118 },
                    { 1842, 44, 118 },
                    { 1843, 50, 118 },
                    { 1844, 58, 118 },
                    { 1845, 87, 118 },
                    { 1846, 78, 118 },
                    { 1847, 10, 119 },
                    { 1848, 14, 119 },
                    { 1849, 6, 119 },
                    { 1850, 20, 119 },
                    { 1851, 31, 119 },
                    { 1852, 34, 119 },
                    { 1853, 39, 119 },
                    { 1854, 44, 119 },
                    { 1855, 50, 119 },
                    { 1856, 58, 119 },
                    { 1857, 87, 119 },
                    { 1858, 78, 119 },
                    { 1859, 10, 120 },
                    { 1860, 14, 120 },
                    { 1861, 24, 120 },
                    { 1862, 25, 120 },
                    { 1863, 6, 120 },
                    { 1864, 29, 120 },
                    { 1865, 20, 120 },
                    { 1866, 30, 120 },
                    { 1867, 31, 120 },
                    { 1868, 33, 120 },
                    { 1869, 34, 120 },
                    { 1870, 70, 120 },
                    { 1871, 46, 120 },
                    { 1872, 44, 120 },
                    { 1873, 50, 120 },
                    { 1874, 58, 120 },
                    { 1875, 87, 120 },
                    { 1876, 67, 120 },
                    { 1877, 55, 120 },
                    { 1878, 10, 121 },
                    { 1879, 14, 121 },
                    { 1880, 24, 121 },
                    { 1881, 25, 121 },
                    { 1882, 6, 121 },
                    { 1883, 29, 121 },
                    { 1884, 20, 121 },
                    { 1885, 30, 121 },
                    { 1886, 31, 121 },
                    { 1887, 33, 121 },
                    { 1888, 34, 121 },
                    { 1889, 39, 121 },
                    { 1890, 70, 121 },
                    { 1891, 46, 121 },
                    { 1892, 44, 121 },
                    { 1893, 50, 121 },
                    { 1894, 58, 121 },
                    { 1895, 87, 121 },
                    { 1896, 67, 121 },
                    { 1897, 55, 121 },
                    { 1898, 72, 121 },
                    { 1899, 10, 122 },
                    { 1900, 17, 122 },
                    { 1901, 18, 122 },
                    { 1902, 24, 122 },
                    { 1903, 25, 122 },
                    { 1904, 6, 122 },
                    { 1905, 29, 122 },
                    { 1906, 20, 122 },
                    { 1907, 30, 122 },
                    { 1908, 31, 122 },
                    { 1909, 33, 122 },
                    { 1910, 34, 122 },
                    { 1911, 35, 122 }
                });

            migrationBuilder.InsertData(
                table: "PokemonLearnableMoves",
                columns: new[] { "Id", "MoveId", "PokemonId" },
                values: new object[,]
                {
                    { 1912, 70, 122 },
                    { 1913, 46, 122 },
                    { 1914, 44, 122 },
                    { 1915, 58, 122 },
                    { 1916, 87, 122 },
                    { 1917, 66, 122 },
                    { 1918, 56, 122 },
                    { 1919, 78, 122 },
                    { 1920, 10, 123 },
                    { 1921, 6, 123 },
                    { 1922, 20, 123 },
                    { 1923, 31, 123 },
                    { 1924, 34, 123 },
                    { 1925, 39, 123 },
                    { 1926, 44, 123 },
                    { 1927, 50, 123 },
                    { 1928, 58, 123 },
                    { 1929, 87, 123 },
                    { 1930, 51, 123 },
                    { 1931, 89, 123 },
                    { 1932, 78, 123 },
                    { 1933, 10, 124 },
                    { 1934, 17, 124 },
                    { 1935, 18, 124 },
                    { 1936, 6, 124 },
                    { 1937, 29, 124 },
                    { 1938, 20, 124 },
                    { 1939, 30, 124 },
                    { 1940, 31, 124 },
                    { 1941, 33, 124 },
                    { 1942, 34, 124 },
                    { 1943, 35, 124 },
                    { 1944, 70, 124 },
                    { 1945, 46, 124 },
                    { 1946, 44, 124 },
                    { 1947, 50, 124 },
                    { 1948, 58, 124 },
                    { 1949, 87, 124 },
                    { 1950, 67, 124 },
                    { 1951, 66, 124 },
                    { 1952, 56, 124 },
                    { 1953, 78, 124 },
                    { 1954, 10, 125 },
                    { 1955, 17, 125 },
                    { 1956, 18, 125 },
                    { 1957, 24, 125 },
                    { 1958, 6, 125 },
                    { 1959, 29, 125 },
                    { 1960, 20, 125 },
                    { 1961, 30, 125 },
                    { 1962, 31, 125 },
                    { 1963, 33, 125 },
                    { 1964, 34, 125 },
                    { 1965, 35, 125 },
                    { 1966, 39, 125 },
                    { 1967, 70, 125 },
                    { 1968, 46, 125 },
                    { 1969, 44, 125 },
                    { 1970, 50, 125 },
                    { 1971, 58, 125 },
                    { 1972, 87, 125 },
                    { 1973, 56, 125 },
                    { 1974, 78, 125 },
                    { 1975, 10, 126 },
                    { 1976, 17, 126 },
                    { 1977, 18, 126 },
                    { 1978, 6, 126 },
                    { 1979, 29, 126 },
                    { 1980, 20, 126 },
                    { 1981, 30, 126 },
                    { 1982, 31, 126 },
                    { 1983, 34, 126 },
                    { 1984, 35, 126 },
                    { 1985, 46, 126 },
                    { 1986, 44, 126 },
                    { 1987, 50, 126 },
                    { 1988, 58, 126 },
                    { 1989, 87, 126 },
                    { 1990, 61, 126 },
                    { 1991, 56, 126 },
                    { 1992, 78, 126 },
                    { 1993, 10, 127 },
                    { 1994, 17, 127 },
                    { 1995, 26, 127 },
                    { 1996, 28, 127 },
                    { 1997, 6, 127 },
                    { 1998, 20, 127 },
                    { 1999, 31, 127 },
                    { 2000, 34, 127 },
                    { 2001, 44, 127 },
                    { 2002, 50, 127 },
                    { 2003, 58, 127 },
                    { 2004, 87, 127 },
                    { 2005, 56, 127 },
                    { 2006, 78, 127 },
                    { 2007, 10, 128 },
                    { 2008, 14, 128 },
                    { 2009, 24, 128 },
                    { 2010, 25, 128 },
                    { 2011, 26, 128 },
                    { 2012, 27, 128 },
                    { 2013, 28, 128 },
                    { 2014, 6, 128 },
                    { 2015, 31, 128 },
                    { 2016, 34, 128 },
                    { 2017, 44, 128 },
                    { 2018, 50, 128 },
                    { 2019, 58, 128 },
                    { 2020, 87, 128 },
                    { 2021, 78, 128 },
                    { 2022, 10, 130 },
                    { 2023, 14, 130 },
                    { 2024, 24, 130 },
                    { 2025, 25, 130 },
                    { 2026, 26, 130 },
                    { 2027, 6, 130 },
                    { 2028, 20, 130 },
                    { 2029, 31, 130 },
                    { 2030, 33, 130 },
                    { 2031, 34, 130 },
                    { 2032, 44, 130 },
                    { 2033, 50, 130 },
                    { 2034, 58, 130 },
                    { 2035, 87, 130 },
                    { 2036, 55, 130 },
                    { 2037, 66, 130 },
                    { 2038, 72, 130 },
                    { 2039, 78, 130 },
                    { 2040, 10, 131 },
                    { 2041, 14, 131 },
                    { 2042, 24, 131 },
                    { 2043, 25, 131 },
                    { 2044, 6, 131 },
                    { 2045, 29, 131 },
                    { 2046, 20, 131 },
                    { 2047, 31, 131 },
                    { 2048, 33, 131 },
                    { 2049, 34, 131 },
                    { 2050, 46, 131 },
                    { 2051, 44, 131 },
                    { 2052, 50, 131 },
                    { 2053, 58, 131 },
                    { 2054, 87, 131 },
                    { 2055, 72, 131 },
                    { 2056, 78, 131 },
                    { 2057, 10, 133 },
                    { 2058, 28, 133 },
                    { 2059, 6, 133 },
                    { 2060, 20, 133 },
                    { 2061, 31, 133 },
                    { 2062, 33, 133 },
                    { 2063, 34, 133 },
                    { 2064, 39, 133 },
                    { 2065, 44, 133 },
                    { 2066, 50, 133 },
                    { 2067, 58, 133 },
                    { 2068, 87, 133 },
                    { 2069, 78, 133 },
                    { 2070, 10, 134 },
                    { 2071, 14, 134 },
                    { 2072, 28, 134 },
                    { 2073, 6, 134 },
                    { 2074, 20, 134 },
                    { 2075, 31, 134 },
                    { 2076, 33, 134 },
                    { 2077, 34, 134 },
                    { 2078, 39, 134 },
                    { 2079, 44, 134 },
                    { 2080, 50, 134 },
                    { 2081, 58, 134 },
                    { 2082, 87, 134 },
                    { 2083, 55, 134 },
                    { 2084, 78, 134 },
                    { 2085, 10, 135 },
                    { 2086, 24, 135 },
                    { 2087, 28, 135 },
                    { 2088, 6, 135 },
                    { 2089, 20, 135 },
                    { 2090, 31, 135 },
                    { 2091, 33, 135 },
                    { 2092, 34, 135 },
                    { 2093, 39, 135 },
                    { 2094, 70, 135 },
                    { 2095, 44, 135 },
                    { 2096, 50, 135 },
                    { 2097, 58, 135 },
                    { 2098, 87, 135 },
                    { 2099, 78, 135 },
                    { 2100, 10, 136 },
                    { 2101, 28, 136 },
                    { 2102, 6, 136 },
                    { 2103, 31, 136 },
                    { 2104, 33, 136 },
                    { 2105, 34, 136 },
                    { 2106, 39, 136 },
                    { 2107, 44, 136 },
                    { 2108, 50, 136 },
                    { 2109, 58, 136 },
                    { 2110, 87, 136 },
                    { 2111, 61, 136 },
                    { 2112, 78, 136 },
                    { 2113, 10, 137 },
                    { 2114, 14, 137 },
                    { 2115, 24, 137 },
                    { 2116, 25, 137 },
                    { 2117, 6, 137 },
                    { 2118, 29, 137 },
                    { 2119, 20, 137 },
                    { 2120, 30, 137 },
                    { 2121, 31, 137 },
                    { 2122, 33, 137 },
                    { 2123, 34, 137 },
                    { 2124, 39, 137 },
                    { 2125, 70, 137 },
                    { 2126, 46, 137 },
                    { 2127, 44, 137 },
                    { 2128, 50, 137 },
                    { 2129, 58, 137 },
                    { 2130, 87, 137 },
                    { 2131, 10, 138 },
                    { 2132, 14, 138 },
                    { 2133, 6, 138 },
                    { 2134, 20, 138 },
                    { 2135, 31, 138 },
                    { 2136, 33, 138 },
                    { 2137, 34, 138 },
                    { 2138, 44, 138 },
                    { 2139, 50, 138 },
                    { 2140, 58, 138 },
                    { 2141, 87, 138 },
                    { 2142, 78, 138 },
                    { 2143, 10, 139 },
                    { 2144, 14, 139 },
                    { 2145, 17, 139 },
                    { 2146, 6, 139 },
                    { 2147, 20, 139 },
                    { 2148, 31, 139 },
                    { 2149, 33, 139 },
                    { 2150, 34, 139 },
                    { 2151, 44, 139 },
                    { 2152, 50, 139 },
                    { 2153, 58, 139 },
                    { 2154, 87, 139 },
                    { 2155, 78, 139 },
                    { 2156, 10, 140 },
                    { 2157, 14, 140 },
                    { 2158, 6, 140 },
                    { 2159, 20, 140 },
                    { 2160, 31, 140 },
                    { 2161, 33, 140 },
                    { 2162, 34, 140 },
                    { 2163, 44, 140 },
                    { 2164, 50, 140 },
                    { 2165, 87, 140 },
                    { 2166, 55, 140 },
                    { 2167, 78, 140 },
                    { 2168, 10, 141 },
                    { 2169, 14, 141 },
                    { 2170, 17, 141 },
                    { 2171, 28, 141 },
                    { 2172, 6, 141 },
                    { 2173, 20, 141 },
                    { 2174, 31, 141 },
                    { 2175, 33, 141 },
                    { 2176, 34, 141 },
                    { 2177, 44, 141 },
                    { 2178, 50, 141 },
                    { 2179, 87, 141 },
                    { 2180, 55, 141 },
                    { 2181, 81, 141 },
                    { 2182, 78, 141 },
                    { 2183, 4, 142 },
                    { 2184, 10, 142 },
                    { 2185, 26, 142 },
                    { 2186, 6, 142 },
                    { 2187, 20, 142 },
                    { 2188, 31, 142 },
                    { 2189, 33, 142 },
                    { 2190, 34, 142 },
                    { 2191, 39, 142 },
                    { 2192, 44, 142 },
                    { 2193, 50, 142 },
                    { 2194, 58, 142 },
                    { 2195, 87, 142 },
                    { 2196, 51, 142 },
                    { 2197, 66, 142 },
                    { 2198, 78, 142 },
                    { 2199, 14, 143 },
                    { 2200, 17, 143 },
                    { 2201, 18, 143 },
                    { 2202, 24, 143 },
                    { 2203, 25, 143 },
                    { 2204, 26, 143 },
                    { 2205, 27, 143 },
                    { 2206, 28, 143 },
                    { 2207, 6, 143 },
                    { 2208, 29, 143 },
                    { 2209, 20, 143 },
                    { 2210, 31, 143 },
                    { 2211, 33, 143 },
                    { 2212, 34, 143 },
                    { 2213, 35, 143 },
                    { 2214, 36, 143 },
                    { 2215, 46, 143 },
                    { 2216, 50, 143 },
                    { 2217, 58, 143 },
                    { 2218, 87, 143 },
                    { 2219, 67, 143 },
                    { 2220, 56, 143 },
                    { 2221, 78, 143 },
                    { 2222, 4, 144 },
                    { 2223, 10, 144 },
                    { 2224, 6, 144 },
                    { 2225, 20, 144 },
                    { 2226, 31, 144 },
                    { 2227, 33, 144 },
                    { 2228, 34, 144 },
                    { 2229, 39, 144 },
                    { 2230, 44, 144 },
                    { 2231, 50, 144 },
                    { 2232, 58, 144 },
                    { 2233, 87, 144 },
                    { 2234, 88, 144 },
                    { 2235, 89, 144 },
                    { 2236, 72, 144 },
                    { 2237, 4, 145 },
                    { 2238, 10, 145 },
                    { 2239, 24, 145 },
                    { 2240, 6, 145 },
                    { 2241, 20, 145 },
                    { 2242, 31, 145 },
                    { 2243, 33, 145 },
                    { 2244, 34, 145 },
                    { 2245, 39, 145 },
                    { 2246, 70, 145 },
                    { 2247, 44, 145 },
                    { 2248, 50, 145 },
                    { 2249, 58, 145 },
                    { 2250, 87, 145 },
                    { 2251, 89, 145 },
                    { 2252, 4, 146 },
                    { 2253, 10, 146 },
                    { 2254, 6, 146 },
                    { 2255, 20, 146 },
                    { 2256, 31, 146 },
                    { 2257, 33, 146 },
                    { 2258, 34, 146 },
                    { 2259, 39, 146 },
                    { 2260, 44, 146 },
                    { 2261, 50, 146 },
                    { 2262, 87, 146 },
                    { 2263, 61, 146 },
                    { 2264, 88, 146 },
                    { 2265, 89, 146 },
                    { 2266, 10, 147 },
                    { 2267, 14, 147 },
                    { 2268, 24, 147 },
                    { 2269, 25, 147 },
                    { 2270, 6, 147 },
                    { 2271, 20, 147 },
                    { 2272, 31, 147 },
                    { 2273, 33, 147 },
                    { 2274, 34, 147 },
                    { 2275, 39, 147 },
                    { 2276, 44, 147 },
                    { 2277, 50, 147 },
                    { 2278, 58, 147 },
                    { 2279, 87, 147 },
                    { 2280, 78, 147 },
                    { 2281, 10, 148 },
                    { 2282, 14, 148 },
                    { 2283, 24, 148 },
                    { 2284, 25, 148 },
                    { 2285, 6, 148 },
                    { 2286, 20, 148 },
                    { 2287, 31, 148 },
                    { 2288, 33, 148 },
                    { 2289, 34, 148 },
                    { 2290, 39, 148 },
                    { 2291, 44, 148 },
                    { 2292, 50, 148 },
                    { 2293, 58, 148 },
                    { 2294, 87, 148 },
                    { 2295, 78, 148 },
                    { 2296, 10, 149 },
                    { 2297, 14, 149 },
                    { 2298, 24, 149 },
                    { 2299, 25, 149 },
                    { 2300, 26, 149 },
                    { 2301, 6, 149 },
                    { 2302, 20, 149 },
                    { 2303, 31, 149 },
                    { 2304, 33, 149 },
                    { 2305, 34, 149 },
                    { 2306, 35, 149 },
                    { 2307, 39, 149 },
                    { 2308, 44, 149 },
                    { 2309, 50, 149 },
                    { 2310, 58, 149 },
                    { 2311, 87, 149 },
                    { 2312, 56, 149 },
                    { 2313, 78, 149 },
                    { 2314, 10, 150 },
                    { 2315, 14, 150 },
                    { 2316, 17, 150 },
                    { 2317, 18, 150 },
                    { 2318, 24, 150 },
                    { 2319, 25, 150 },
                    { 2320, 26, 150 },
                    { 2321, 6, 150 },
                    { 2322, 20, 150 },
                    { 2323, 30, 150 },
                    { 2324, 31, 150 },
                    { 2325, 33, 150 },
                    { 2326, 34, 150 },
                    { 2327, 35, 150 },
                    { 2328, 36, 150 },
                    { 2329, 70, 150 },
                    { 2330, 46, 150 },
                    { 2331, 44, 150 },
                    { 2332, 50, 150 },
                    { 2333, 58, 150 },
                    { 2334, 87, 150 },
                    { 2335, 61, 150 },
                    { 2336, 67, 150 },
                    { 2337, 63, 150 },
                    { 2338, 56, 150 },
                    { 2339, 72, 150 },
                    { 2340, 4, 151 },
                    { 2341, 10, 151 },
                    { 2342, 14, 151 },
                    { 2343, 17, 151 },
                    { 2344, 18, 151 },
                    { 2345, 24, 151 },
                    { 2346, 25, 151 },
                    { 2347, 26, 151 },
                    { 2348, 27, 151 },
                    { 2349, 28, 151 },
                    { 2350, 6, 151 },
                    { 2351, 20, 151 },
                    { 2352, 30, 151 },
                    { 2353, 31, 151 },
                    { 2354, 33, 151 },
                    { 2355, 34, 151 },
                    { 2356, 36, 151 },
                    { 2357, 39, 151 },
                    { 2358, 41, 151 },
                    { 2359, 70, 151 },
                    { 2360, 46, 151 },
                    { 2361, 47, 151 },
                    { 2362, 44, 151 },
                    { 2363, 50, 151 },
                    { 2364, 58, 151 },
                    { 2365, 87, 151 },
                    { 2366, 61, 151 },
                    { 2367, 67, 151 },
                    { 2368, 51, 151 },
                    { 2369, 55, 151 },
                    { 2370, 88, 151 },
                    { 2371, 89, 151 },
                    { 2372, 66, 151 },
                    { 2373, 63, 151 },
                    { 2374, 56, 151 },
                    { 2375, 81, 151 },
                    { 2376, 72, 151 },
                    { 2377, 78, 151 }
                });

            migrationBuilder.InsertData(
                table: "UserProfiles",
                columns: new[] { "Id", "Address", "CityId", "FirstName", "IdentityUserId", "LastName", "ProfilePictureUrl", "RegionId" },
                values: new object[] { 1, "101 Poke St", 89, "Ash", "dbc40bc6-0829-4ac5-a3ed-180f5e916a5f", "Ketchum", "https://i.pinimg.com/474x/55/30/81/5530812c4d781a3c13cf47184ec3c0ec.jpg", 1 });

            migrationBuilder.InsertData(
                table: "Orders",
                columns: new[] { "Id", "Address", "CityId", "Date", "FirstName", "LastName", "MiddleInitial", "RegionId", "UserProfileId" },
                values: new object[] { 1, "101 Poke St", 89, new DateTime(2023, 6, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), "Ash", "Ketchum", null, 1, 1 });

            migrationBuilder.InsertData(
                table: "Reviews",
                columns: new[] { "Id", "Body", "Date", "ItemId", "Rating", "UserProfileId" },
                values: new object[,]
                {
                    { 1, "It's great!", new DateTime(2023, 6, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), 1, 4, 1 },
                    { 2, "It's good!", new DateTime(2023, 6, 28, 0, 0, 0, 0, DateTimeKind.Unspecified), 3, 3, 1 }
                });

            migrationBuilder.InsertData(
                table: "UserPokemon",
                columns: new[] { "Id", "Level", "NickName", "PokemonId", "UserProfileId" },
                values: new object[,]
                {
                    { 1, 40, "LeeroyJenkins", 6, 1 },
                    { 2, 30, "Bobert", 26, 1 }
                });

            migrationBuilder.InsertData(
                table: "OrderItems",
                columns: new[] { "Id", "ItemId", "OrderId", "Quantity" },
                values: new object[,]
                {
                    { 1, 1, 1, 3 },
                    { 2, 3, 1, 2 }
                });

            migrationBuilder.CreateIndex(
                name: "IX_AspNetRoleClaims_RoleId",
                table: "AspNetRoleClaims",
                column: "RoleId");

            migrationBuilder.CreateIndex(
                name: "RoleNameIndex",
                table: "AspNetRoles",
                column: "NormalizedName",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_AspNetUserClaims_UserId",
                table: "AspNetUserClaims",
                column: "UserId");

            migrationBuilder.CreateIndex(
                name: "IX_AspNetUserLogins_UserId",
                table: "AspNetUserLogins",
                column: "UserId");

            migrationBuilder.CreateIndex(
                name: "IX_AspNetUserRoles_RoleId",
                table: "AspNetUserRoles",
                column: "RoleId");

            migrationBuilder.CreateIndex(
                name: "EmailIndex",
                table: "AspNetUsers",
                column: "NormalizedEmail");

            migrationBuilder.CreateIndex(
                name: "UserNameIndex",
                table: "AspNetUsers",
                column: "NormalizedUserName",
                unique: true);

            migrationBuilder.CreateIndex(
                name: "IX_Cities_RegionId",
                table: "Cities",
                column: "RegionId");

            migrationBuilder.CreateIndex(
                name: "IX_Items_CategoryId",
                table: "Items",
                column: "CategoryId");

            migrationBuilder.CreateIndex(
                name: "IX_Items_MoveId",
                table: "Items",
                column: "MoveId");

            migrationBuilder.CreateIndex(
                name: "IX_Moves_DamageClassId",
                table: "Moves",
                column: "DamageClassId");

            migrationBuilder.CreateIndex(
                name: "IX_Moves_PokeTypeId",
                table: "Moves",
                column: "PokeTypeId");

            migrationBuilder.CreateIndex(
                name: "IX_OrderItems_ItemId",
                table: "OrderItems",
                column: "ItemId");

            migrationBuilder.CreateIndex(
                name: "IX_OrderItems_OrderId",
                table: "OrderItems",
                column: "OrderId");

            migrationBuilder.CreateIndex(
                name: "IX_Orders_CityId",
                table: "Orders",
                column: "CityId");

            migrationBuilder.CreateIndex(
                name: "IX_Orders_RegionId",
                table: "Orders",
                column: "RegionId");

            migrationBuilder.CreateIndex(
                name: "IX_Orders_UserProfileId",
                table: "Orders",
                column: "UserProfileId");

            migrationBuilder.CreateIndex(
                name: "IX_PokemonLearnableMoves_MoveId",
                table: "PokemonLearnableMoves",
                column: "MoveId");

            migrationBuilder.CreateIndex(
                name: "IX_PokemonLearnableMoves_PokemonId",
                table: "PokemonLearnableMoves",
                column: "PokemonId");

            migrationBuilder.CreateIndex(
                name: "IX_PokemonTypes_PokemonId",
                table: "PokemonTypes",
                column: "PokemonId");

            migrationBuilder.CreateIndex(
                name: "IX_PokemonTypes_PokeTypeId",
                table: "PokemonTypes",
                column: "PokeTypeId");

            migrationBuilder.CreateIndex(
                name: "IX_Reviews_ItemId",
                table: "Reviews",
                column: "ItemId");

            migrationBuilder.CreateIndex(
                name: "IX_Reviews_UserProfileId",
                table: "Reviews",
                column: "UserProfileId");

            migrationBuilder.CreateIndex(
                name: "IX_UserPokemon_PokemonId",
                table: "UserPokemon",
                column: "PokemonId");

            migrationBuilder.CreateIndex(
                name: "IX_UserPokemon_UserProfileId",
                table: "UserPokemon",
                column: "UserProfileId");

            migrationBuilder.CreateIndex(
                name: "IX_UserProfiles_CityId",
                table: "UserProfiles",
                column: "CityId");

            migrationBuilder.CreateIndex(
                name: "IX_UserProfiles_IdentityUserId",
                table: "UserProfiles",
                column: "IdentityUserId");

            migrationBuilder.CreateIndex(
                name: "IX_UserProfiles_RegionId",
                table: "UserProfiles",
                column: "RegionId");
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.DropTable(
                name: "AspNetRoleClaims");

            migrationBuilder.DropTable(
                name: "AspNetUserClaims");

            migrationBuilder.DropTable(
                name: "AspNetUserLogins");

            migrationBuilder.DropTable(
                name: "AspNetUserRoles");

            migrationBuilder.DropTable(
                name: "AspNetUserTokens");

            migrationBuilder.DropTable(
                name: "OrderItems");

            migrationBuilder.DropTable(
                name: "PokemonLearnableMoves");

            migrationBuilder.DropTable(
                name: "PokemonTypes");

            migrationBuilder.DropTable(
                name: "Reviews");

            migrationBuilder.DropTable(
                name: "UserPokemon");

            migrationBuilder.DropTable(
                name: "AspNetRoles");

            migrationBuilder.DropTable(
                name: "Orders");

            migrationBuilder.DropTable(
                name: "Items");

            migrationBuilder.DropTable(
                name: "Pokemon");

            migrationBuilder.DropTable(
                name: "UserProfiles");

            migrationBuilder.DropTable(
                name: "Categories");

            migrationBuilder.DropTable(
                name: "Moves");

            migrationBuilder.DropTable(
                name: "AspNetUsers");

            migrationBuilder.DropTable(
                name: "Cities");

            migrationBuilder.DropTable(
                name: "DamageClasses");

            migrationBuilder.DropTable(
                name: "PokeTypes");

            migrationBuilder.DropTable(
                name: "Regions");
        }
    }
}
